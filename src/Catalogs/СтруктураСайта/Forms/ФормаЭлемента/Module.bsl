#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Текст) Тогда
		
		ТекстовыйДокумент 	= Новый ТекстовыйДокумент;
		ИВФ					= ПолучитьИмяВременногоФайла();
		
		ТекстовыйДокумент.УстановитьТекст(Текст);
		ТекстовыйДокумент.Записать(ИВФ, "UTF-8");
		
		ОбъектСсылка = Объект.Ссылка.ПолучитьОбъект();
		ОбъектСсылка.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИВФ), Новый СжатиеДанных(9));
		ОбъектСсылка.Записать();
		
		УдалитьФайлы(ИВФ);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Закрыть();
	ПерейтиПоНавигационнойСсылке(ПолучитьНавигационнуюСсылку(ЭтотОбъект));
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьТекстНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьТекст(Команда)
	ПолучитьТекстНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда	
		Путь = ВыбранныеФайлы[0];
		ЗаписатьДвоичныеДанныеФайла(Новый ДвоичныеДанные(Путь));	
		
		Закрыть();
		ПерейтиПоНавигационнойСсылке(ПолучитьНавигационнуюСсылку(ЭтотОбъект));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДвоичныеДанныеФайла(ДД)
	
	Записать();
	//@skip-check unknown-method-property
	ОбъектФайл 				= Объект.Ссылка.ПолучитьОбъект();
	ОбъектФайл.Хранилище 	= Новый ХранилищеЗначения(ДД);
	ОбъектФайл.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТекстНаСервере()
	
	ОбъектСсылка = Объект.Ссылка.ПолучитьОбъект();
	ДД 		= ОбъектСсылка.Хранилище.Получить();
	ИВФ		= ПолучитьИмяВременногоФайла();
	ДД.Записать(ИВФ);
	
	ТекстДокумент 	= Новый ТекстовыйДокумент();
	ТекстДокумент.Прочитать(ИВФ, "UTF-8");
	
	Текст = ТекстДокумент.ПолучитьТекст();
	
	УдалитьФайлы(ИВФ);
	
КонецПроцедуры

#КонецОбласти

