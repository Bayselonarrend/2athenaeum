#Область ОбработчикиСобытий

Функция tgbotlogIn(Запрос)    
    
    Возврат МетодыApiСайта.tgbotlogIn(Запрос);
    
КонецФункции

Функция vklogintakeData(Запрос)
        
    Возврат МетодыApiСайта.vklogintakeData(Запрос);
    
КонецФункции

Функция vkbottakeData(Запрос)
    
    Возврат МетодыApiСайта.vkbottakeData(Запрос);
    
КонецФункции

Функция takeStartsendData(Запрос)
    
    Возврат МетодыApiСайта.takeStartsendData(Запрос);
    
КонецФункции

Функция vkbotcallBack(Запрос)    
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;    
КонецФункции

Функция tgbotgetLog(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция takeStartcallBack(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция tgbotcallBack(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция vklogincallBack(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция vkbotcors(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция miniAppwriteNewSession(Запрос)
	
	Попытка
		
		Ответ = Новый HTTPСервисОтвет(200);
		
		Печенька     	= Запрос.ПараметрыЗапроса.Получить("cookie");
		ID           	= Запрос.ПараметрыЗапроса.Получить("id");
		ПользовательИБ 	= Справочники.Пользователи.НайтиПоРеквизиту("Telegram", ID);
		
		Если ЗначениеЗаполнено(ПользовательИБ) Тогда
			
			МЗ = РегистрыСведений.АктивныеСеансы.СоздатьМенеджерЗаписи();
			МЗ.Cookie       = Печенька;
			МЗ.Пользователь = ПользовательИБ;
			МЗ.Дата         = ТекущаяДатаСеанса();
			МЗ.Записать(Истина);
			
		КонецЕсли;
		
		Возврат Ответ;
		
	Исключение
		
		ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
		
	КонецПопытки;
	
КонецФункции

Функция miniAppCORSCallback(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

#КонецОбласти
