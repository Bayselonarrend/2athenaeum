#Если Не ВебКлиент И Не ТонкийКлиент Тогда
    
#Область ПрограммныйИнтерфейс

// Обработать картинку по шаблону.
// 
// Параметры:
//  ВидОбработки - СправочникСсылка.ВидыОбработкиИзображения - Вид обработки изображения
//  СтруктураОбработки - Структура - Структура параметров обработки:
//  *ТекстА - Строка
//  *ТекстБ - Строка
//  *Медиа - СправочникСсылка.Файлы
//  *МедиаДД - ДвоичныеДанные
//  ВозвращатьДД - Булево -  Возвращать ДД или путь
// 
// Возвращаемое значение:
//  ДвоичныеДанные, Строка -  Готовая картинка
Функция ОбработатьКартинкуПоШаблону(Знач ВидОбработки, Знач СтруктураОбработки, Знач ВозвращатьДД = Ложь) Экспорт
    
    НаименованиеВида = ИнструментарийВызовСервера.ЗначениеРеквизитаОбъекта(ВидОбработки, "Наименование");
    
    ТекстА = СтруктураОбработки["ТекстА"];
    ТекстБ = СтруктураОбработки["ТекстБ"];
    
    Путь   = ПолучитьИмяВременногоФайла("png");
    
    Если ТипЗнч(СтруктураОбработки["Медиа"]) = Тип("СправочникСсылка.Файлы") Тогда
        ОбъектМедиа = СтруктураОбработки["Медиа"].ПолучитьОбъект();
        ДД          = ОбъектМедиа.Файл.Получить();
    Иначе
        ДД          = СтруктураОбработки["МедиаДД"];
    КонецЕсли;
    
    ДД.Записать(Путь);
    
    Если НаименованиеВида = "Заголовок притчи" Тогда
        Метод_ЗаголовокПритчи(ТекстА, ТекстБ, Путь);
    КонецЕсли;
        
    Если НаименованиеВида = "Основной текст притчи" Тогда
        Метод_ОсновнойТекстПритчи(ТекстА, Путь);        
    КонецЕсли;
    
    Если ВозвращатьДД Тогда
        ДД = Новый ДвоичныеДанные(Путь);
        УдалитьФайлы(Путь);
        Возврат ДД;
    Иначе     
        Возврат Путь;
    КонецЕсли;
    
КонецФункции

// Сформировать галерею.
// 
// Параметры:
//  Картинка - Строка,ДвоичныеДанные - Картинка ДД или путь на диске
// 
// Возвращаемое значение:
//  Массив Из ДвоичныеДанные -  Массив-галерея картинок 
Функция СформироватьГалерею(Знач Картинка) Экспорт
    
    РП    = """ """;
    КП    = """";
    
    Если ТипЗнч(Картинка) = Тип("ДвоичныеДанные") Тогда
        
        ВходнаяКартинка = ПолучитьИмяВременногоФайла("jpeg");
        Картинка.Записать(ВходнаяКартинка);
        
    Иначе
        
        ВходнаяКартинка = Картинка;
        
    КонецЕсли;
    
    МассивКартинок       = Новый Массив;
    ОсновнаяКартинка     = ПолучитьИмяВременногоФайла("jpg");
    ДопКартинка          = ПолучитьИмяВременногоФайла("jpg");
    ДопКартинка1         = СтрЗаменить(ДопКартинка, ".jpg", "-0.jpg");
    ДопКартинка2         = СтрЗаменить(ДопКартинка, ".jpg", "-1.jpg");
    
    ИмяСкрипта           = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта         = Новый ТекстовыйДокумент();
    ТекстСкрипта.УстановитьТекст(
    "convert -resize 768x1152 """ + ВходнаяКартинка + РП + ОсновнаяКартинка + КП + Символы.ПС + 
    "convert -gravity Center -crop ""91%"" """ + ОсновнаяКартинка + РП + ОсновнаяКартинка + КП + Символы.ПС +  
    "convert -crop 768x768 """ + ОсновнаяКартинка + РП + ДопКартинка + КП 
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
    
    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
    
    МассивКартинок.Добавить(Новый ДвоичныеДанные(ОсновнаяКартинка));
    МассивКартинок.Добавить(Новый ДвоичныеДанные(ДопКартинка1));
    МассивКартинок.Добавить(Новый ДвоичныеДанные(ДопКартинка2));
    
    УдалитьФайлы(ИмяСкрипта);
    УдалитьФайлы(ВходнаяКартинка);
    УдалитьФайлы(ОсновнаяКартинка);
    УдалитьФайлы(ДопКартинка);

    Возврат МассивКартинок; 
    
КонецФункции

// Сформировать термин.
// 
// Параметры:
//  Термин - СправочникСсылка.Термины - Термин
// 
// Возвращаемое значение:
//  ДвоичныеДанные -  Картинка термина
Функция СформироватьТермин(Знач Термин) Экспорт
    
    РеквизитыТермина		 = ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(Термин, "Описание,Наименование");
    РазмерЗаголовка          = 84;
    РазмерШрифта             = 30;
    ОграничениеПоСимволам    = 64;
    
    ОбъектТермин             = Справочники.Файлы.Термин.ПолучитьОбъект();
    Фон                      = ОбъектТермин.Файл.Получить();
    ПутьФон                  = ПолучитьИмяВременногоФайла("png");
    КартинкаОбработанная     = ПолучитьИмяВременногоФайла("png");
    Фон.Записать(ПутьФон);
    
    Текст = СтрРазделить(РеквизитыТермина.Описание, " ", Ложь);
    ТекстСтрокой    = "";
    ЧастьТекста     = "";
    Н               = 0;
    
    Для Н = 0 По Текст.ВГраница() - 1 Цикл
        
        ТекстСтрокой = ТекстСтрокой + Текст[Н] + " ";
        ЧастьТекста  = ЧастьТекста  + Текст[Н] + " ";
        
        Если СтрДлина(ЧастьТекста + Текст[Н + 1]) > ОграничениеПоСимволам Тогда
            ТекстСтрокой = ТекстСтрокой + "\n";
            ЧастьТекста  = "";
        КонецЕсли;
        
    КонецЦикла;        
    
    ТекстСтрокой = ТекстСтрокой + Текст[Текст.ВГраница()];
    
    ИмяСкрипта   = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта = Новый ТекстовыйДокумент();
    
    ТекстСкрипта.УстановитьТекст(
    "magick " 
    + ПутьФон 
    + " -pointsize " 
    + РазмерЗаголовка 
    + " -fill white -font Sylfaen  -annotate +90+180 '" 
    + РеквизитыТермина.Наименование 
    + "' "
    + КартинкаОбработанная
    + Символы.ПС
    + "magick "
    + КартинкаОбработанная
    + " -pointsize "
    + РазмерШрифта
    + " -fill white -font Tahoma -annotate +90+320 '"
    + ТекстСтрокой
    + "' "
    + КартинкаОбработанная
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
    
    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
    
    УдалитьФайлы(ИмяСкрипта);
    
    КартинкаДвоичные = Новый ДвоичныеДанные(КартинкаОбработанная);
    
    УдалитьФайлы(КартинкаОбработанная);
    УдалитьФайлы(ПутьФон);
    
    Возврат КартинкаДвоичные;
    
КонецФункции

// Сформировать событие.
// 
// Параметры:
//  Событие - СправочникСсылка.События - Событие
//  Сообщество - СправочникСсылка.Сообщества - Сообщество
// 
// Возвращаемое значение:
//  ДвоичныеДанные -  Сформировать событие
Функция СформироватьСобытие(Знач Событие, Знач Сообщество) Экспорт
    
    РеквизитыСобытия = ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(Событие
    	,"Место,Аннотация,Дата,ОтступМарки"); 
        
    РП    = """ """;
    КП    = """";
    НВ    = "magick """;
    PNG   = ".png";
    
    ЦветПодложки     = "black";
    ЦветТекста       = "white";
    Шрифт            = "Sylfaen";
    
    КартинкаОбработанная = ПолучитьИмяВременногоФайла(PNG);

    Место            = РеквизитыСобытия.Место;
    Наименование     = РеквизитыСобытия.Аннотация;
    ДатаСобытия      = РеквизитыСобытия.Дата;
    
    ЛогоДД  = Сообщество.ПолучитьОбъект().Лого.Получить();
    Лого    = ПолучитьИмяВременногоФайла(PNG);
    ЛогоДД.Записать(Лого);

    ФотоДД  = Событие.ПолучитьОбъект().КартинкаДД.Получить();
    Фото    = ПолучитьИмяВременногоФайла(PNG);
    ФотоДД.Записать(Фото);
    
    ИмяСкрипта   = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта = Новый ТекстовыйДокумент();
    
    ТекстСкрипта.УстановитьТекст(
    "convert -resize 96x96 """
    + Лого
    + РП 
    + Лого
    + КП
    + Символы.ПС
    + НВ
    + Фото
    + РП 
    + Лого
    + """ -gravity SouthWest -geometry +15+"
    + Строка(РеквизитыСобытия.ОтступМарки)
    + " -composite """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -fill white -stroke " + ЦветТекста + " -undercolor " + ЦветПодложки + " -font " + Шрифт 
    + " -pointsize 28 -gravity SouthWest -draw ""text 130,65 '"
    + Наименование 
    + "'"" """ 
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -fill white -stroke " + ЦветТекста + " -undercolor " + ЦветПодложки 
    + " -font Tahoma -pointsize 18 -gravity SouthWest -draw ""text 130,30 '"
    + Место
    + ", "
    + ДатаСобытия
    + "'"" """
    + КартинкаОбработанная
    + КП
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);

    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта, , Истина, КодВозврата);
    
    КартинкаДвоичные = Новый ДвоичныеДанные(КартинкаОбработанная);
    
    УдалитьФайлы(ИмяСкрипта);
    УдалитьФайлы(КартинкаОбработанная);
    УдалитьФайлы(Лого);
    УдалитьФайлы(Фото);
    
    Возврат КартинкаДвоичные;

КонецФункции

// Сформировать изображение с текстом.
// 
// Параметры:
//  Содержание - СправочникСсылка.Цитаты - Цитата
//  Текст - Строка - Текст
//  Автор - СправочникСсылка.Люди - Автор
//  Картинка - Строка,ДвоичныеДанные - Картинка двоичными или путь на диске
//  История - Булево -  Картинка создается для истории ВК
// 
// Возвращаемое значение:
//  Строка -  Путь к обработанной картинке
Функция СформироватьИзображениеСТекстом(Знач Содержание
    , Знач Текст
    , Знач Автор
    , Знач Картинка
    , Знач История = Ложь) Экспорт
    
    Если ТипЗнч(Содержание) = Тип("СправочникСсылка.Цитаты") Тогда
        
        РазмерШрифта            = ?(История, 28, 39); 
        ОграничениеПоСимволам   = ?(История, 31, 45);
        
        МассивФорматов = Новый Массив;
        МассивФорматов.Добавить(".jpeg");
        МассивФорматов.Добавить(".png");
        МассивФорматов.Добавить(".jpg");
        МассивФорматов.Добавить(".webm");
        МассивФорматов.Добавить(".gif");
        МассивФорматов.Добавить(".svc");
        
        Если ТипЗнч(Картинка) = Тип("Строка") Тогда
            КартинкаОбработанная = Картинка;
        Иначе
            //@skip-check missing-temporary-file-deletion
            КартинкаОбработанная = ПолучитьИмяВременногоФайла("png");
            Картинка.Записать(КартинкаОбработанная);
        КонецЕсли;
        
        Текст = СтрРазделить(Текст, " ", Ложь);
        ТекстСтрокой   = "";
        ЧастьТекста    = "";
        Н              = 0;
        
        Для Н = 0 По Текст.ВГраница() - 1 Цикл
            
            ТекстСтрокой = ТекстСтрокой + Текст[Н] + " ";
            ЧастьТекста  = ЧастьТекста  + Текст[Н] + " ";
            
            Если СтрДлина(ЧастьТекста + Текст[Н + 1]) > ОграничениеПоСимволам Тогда
                ТекстСтрокой = ТекстСтрокой + "\n";
                ЧастьТекста  = "";
            КонецЕсли;
            
        КонецЦикла;        
        
        ТекстСтрокой = ТекстСтрокой + Текст[Текст.ВГраница()];
        ТекстСтрокой = ТекстСтрокой + "\n" + "\n" + Автор;
        ТекстСтрокой = СтрЗаменить(ТекстСтрокой, """", "\""");
            
        ИмяСкрипта    = ПолучитьИмяВременногоФайла(".ps1");
        ТекстСкрипта  = Новый ТекстовыйДокумент();
        
        ТекстСкрипта.УстановитьТекст(
        "magick """ 
        + КартинкаОбработанная  
        + """ -background ""#000000C3"" -fill ""#FFFFFFFF"" -font Sylfaen -size 1024x1024 -gravity "
        + "Center -size 1024x1024 -pointsize " 
        + РазмерШрифта 
        + " label:'"
        + ТекстСтрокой
        + "' -gravity Center -composite """
        + КартинкаОбработанная
        + """");
        
        ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
        
        КодВозврата = 0;
        ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
        
        УдалитьФайлы(ИмяСкрипта);
        
    Иначе
        
        КартинкаОбработанная = "";
        
    КонецЕсли;
    
    Возврат КартинкаОбработанная;
    
КонецФункции

// Сформировать рекламу книги.
// 
// Параметры:
//  Книга - СправочникСсылка.Произведения - Книга
// 
// Возвращаемое значение:
//  Структура -  Реклама книги:
// * Картинка - Строка - Путь к картинке
// * МассивВФ - Массив из Строка - Массив ВФ для удаления 
Функция СформироватьРекламуКниги(Знач Книга) Экспорт
        
    РП    = """ """;
    КП    = """";
    НВ    = "magick """;
    PNG   = ".png";
    
    //@skip-check reading-attribute-from-database
    ФонДД    = Справочники.Файлы.РК_Фон.Файл.Получить();
    Фон      = ПолучитьИмяВременногоФайла(PNG);
    ФонДД.Записать(Фон);
    
    //@skip-check reading-attribute-from-database
    РамкаДД  = Справочники.Файлы.РК_Рамка.Файл.Получить();
    Рамка    = ПолучитьИмяВременногоФайла(PNG);
    РамкаДД.Записать(Рамка);
    
    ОбъектКнига 	= Книга.ПолучитьОбъект();
    РеквизитыАвтора	= ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(ОбъектКнига.Автор, "Имя,Фамилия");
    
    КартинкаКнигиДД = ОбъектКнига.КартинкаДвоичные.Получить();
    КартинкаКниги   = ПолучитьИмяВременногоФайла(PNG);
    КартинкаКнигиДД.Записать(КартинкаКниги);
    
    КодКниги         = ОбъектКнига.Код;
    НазваниеКниги    = ОбъектКнига.Наименование;
    АвторКниги       = РеквизитыАвтора.Имя + " " + РеквизитыАвтора.Фамилия;
    
    //@skip-check missing-temporary-file-deletion
    КартинкаОбработанная = ПолучитьИмяВременногоФайла(PNG);
    
    МассивВФ = Новый Массив;
    МассивВФ.Добавить(Фон);
    МассивВФ.Добавить(Рамка);
    МассивВФ.Добавить(КартинкаКниги);
    
    ИмяСкрипта     = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта   = Новый ТекстовыйДокумент();
    
    ТекстСкрипта.УстановитьТекст(
    "convert -resize 365x528! """
    + КартинкаКниги
    + РП
    + КартинкаКниги
    + КП
    + Символы.ПС
    + НВ
    + Фон
    + РП
    + КартинкаКниги
    + """ -geometry +120+500 -composite """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + РП
    + Рамка
    + """ -geometry +120+500 -composite """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 32 -fill white -font Sylfaen -gravity South -annotate -210+120 '"
    + НазваниеКниги
    + "' """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 22 -fill grey -font Tahoma -gravity South -annotate -210+90 '"
    + АвторКниги
    + "' """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 88 -fill white -font Sylfaen -gravity Center -annotate +0-290 '"
    + НазваниеКниги
    + "' """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 24 -fill grey -font Tahoma -gravity Center -annotate +0-220 '"
    + АвторКниги
    + " в библиотеке Two-Digit Athenaeum'"""
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 66 -fill grey -font Sylfaen -gravity South -annotate +160+330 'по коду:' """
    + КартинкаОбработанная 
    + КП
    + Символы.ПС
    + НВ
    + КартинкаОбработанная
    + """ -pointsize 120 -fill white -font Tahoma -gravity South -annotate +200+195 '"
    + КодКниги
    + "' """
    + КартинкаОбработанная
    + КП
    + Символы.ПС
    + "convert -resize 768x768 """
    + КартинкаОбработанная
    + РП
    + КартинкаОбработанная
    + КП
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);

    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта, , Истина, КодВозврата);
    
    УдалитьФайлы(ИмяСкрипта);
    УдалитьФайлы(Фон);
    УдалитьФайлы(Рамка);
    УдалитьФайлы(КартинкаКниги);
    
    СтруктураВозврата = Новый Структура;
    СтруктураВозврата.Вставить("Картинка", КартинкаОбработанная);
    СтруктураВозврата.Вставить("МассивВФ", МассивВФ);
    
    Возврат СтруктураВозврата;
    
КонецФункции

// Сформировать картинку дня рождения.
// 
// Параметры:
//  Человек - СправочникСсылка.Люди - Человек
// 
// Возвращаемое значение:
//  Строка -  Путь к картинке дня рождения
Функция СформироватьКартинкуДняРождения(Знач Человек) Экспорт
    
    РП    = """ """;
    КП    = """";
    НВ    = "magick """;
    
    ОбъектАвтор = Человек.ПолучитьОбъект();
    ДД          = ОбъектАвтор.Фото.Получить();
    
    //@skip-check missing-temporary-file-deletion
    Путь        = ПолучитьИмяВременногоФайла("jpg");  
    ОбъектДР    = Справочники.Файлы.ДР.ПолучитьОбъект();
    Маска       = ОбъектДР.Файл.Получить();
    ПутьМаска   = ПолучитьИмяВременногоФайла("png");
    
    ДД.Записать(Путь);
    Маска.Записать(ПутьМаска);
    
    Если ОбъектАвтор.ОсновноеСообщество = Справочники.Сообщества.Athenaeum
        Или ОбъектАвтор.ОсновноеСообщество = Справочники.Сообщества.Тест Тогда
        
        ИмяСкрипта     = ПолучитьИмяВременногоФайла(".ps1");
        ТекстСкрипта   = Новый ТекстовыйДокумент();
        
        ТекстСкрипта.УстановитьТекст(
        "convert -resize 1143x643 """ 
        + Путь 
        + РП 
        + Путь 
        + КП 
        + Символы.ПС 
        + НВ 
        + Путь 
        + РП 
        + ПутьМаска 
        + КП 
        + " -grayscale Rec709Luminance  -geometry 1143x643 -gravity Center -composite """ 
        + Путь
        + КП 
        + Символы.ПС 
        + НВ 
        + Путь 
        + """ -pointsize 50 -fill white -font Sylfaen -gravity Center -annotate +0+70 '" 
        + ОбъектАвтор.Имя 
        + " " 
        + ОбъектАвтор.Фамилия 
        + "' """ 
        + Путь 
        + КП 
        + Символы.ПС 
        + НВ 
        + Путь 
        + """ -pointsize 24 -fill white -font Tahoma -gravity Center -annotate +0+117 '" 
        + Формат(ОбъектАвтор.ДР, "ДЛФ=DD") 
        + "' """ 
        + Путь 
        + КП        
        );
        
        ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
        
        КодВозврата = 0;
        ЗапуститьПриложение("powershell -file " + ИмяСкрипта, , Истина, КодВозврата);
        УдалитьФайлы(ИмяСкрипта);
        УдалитьФайлы(ПутьМаска);
        
    КонецЕсли;

    Возврат Путь;
    
КонецФункции

// Создает копии с разными размерами в папке оригинала
// 
// Параметры:
//  ПутьКОригиналу - Строка - Путь к оригиналу
Процедура СоздатьКарточки(Знач ПутьКОригиналу) Экспорт
    
    Картинка        = Новый Файл(ПутьКОригиналу);
    Путь            = Картинка.Путь;
    Размеры         = Новый Соответствие;
    WEBP            = ".webp";
    
    Размеры.Вставить("small"    , "175x270");
    Размеры.Вставить("medium"   , "295x455");
    
    Для Каждого Размер Из Размеры Цикл
        
        РазмерМассив  = СтрРазделить(Размер.Значение, "x");
        Ширина        = РазмерМассив[0];
        
        ИмяСкрипта    = ПолучитьИмяВременногоФайла(".ps1");
        ТекстСкрипта  = Новый ТекстовыйДокумент();
        
        ТекстСкрипта.УстановитьТекст(
        "magick convert -resize " + Ширина + "x -unsharp 0x0.55+0.55+0.008 -quality 90 "
        + ПутьКОригиналу 
        + " "
        + Путь 
        + Размер.Ключ 
        + WEBP 
        + Символы.ПС +   
        "convert "
        + Путь 
        + Размер.Ключ
        + WEBP
        + " -resize " + Размер.Значение + "! -gravity North -extent " + Размер.Значение + " "
        + Путь 
        + Размер.Ключ
        + WEBP
        );
        
        ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);                
        КодВозврата = 0;
        ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
        
        УдалитьФайлы(ИмяСкрипта);
        
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Метод_ЗаголовокПритчи(Знач ТекстА, Знач ТекстБ, Знач Путь) 
    
    РазмерЗаголовка    = 74;
    РазмерШрифта       = 35;
    ИмяСкрипта         = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта       = Новый ТекстовыйДокумент();
    
    ТекстСкрипта.УстановитьТекст( 
    "magick " 
    + Путь 
    + " -pointsize " 
    + РазмерЗаголовка 
    + " -gravity Center -fill white -font Sylfaen  -annotate +0+50 '" 
    + ТекстА 
    + "' "
    + Путь
    + Символы.ПС
    + "magick "
    + Путь
    + " -pointsize "
    + РазмерШрифта
    + " -gravity Center -fill gray -font Tahoma -annotate +0+250 '"
    + ТекстБ
    + "' "
    + Путь
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
        
    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
    
    УдалитьФайлы(ИмяСкрипта);
    
КонецПроцедуры

Процедура Метод_ОсновнойТекстПритчи(Знач ТекстА, Знач Путь)

    РазмерШрифта             = 30;
    ОграничениеПоСимволам    = 54;
    
    Текст = СтрЗаменить(ТекстА , "¶"          , " \n ");
    Текст = СтрЗаменить(Текст  , Символы.ПС   , " \n ");
    Текст = СтрРазделить(Текст , " "          , Ложь);
    
    ТекстСтрокой     = "";
    ЧастьТекста      = "";
    Н                = 0;
    
    Для Н = 0 По Текст.ВГраница() - 1 Цикл
        
        Если Текст[Н] = "\n" Тогда
            ТекстСтрокой = ТекстСтрокой + Текст[Н];
            ЧастьТекста  = "";
            Продолжить;
        КонецЕсли;
        
        ТекстСтрокой = ТекстСтрокой    + Текст[Н] + " ";
        ЧастьТекста  = ЧастьТекста     + Текст[Н] + " ";
        
        Если СтрДлина(ЧастьТекста + Текст[Н + 1]) > ОграничениеПоСимволам Тогда
            ТекстСтрокой = ТекстСтрокой + "\n";
            ЧастьТекста  = "";
        КонецЕсли;
        
    КонецЦикла;        
    
    ТекстСтрокой = ТекстСтрокой + Текст[Текст.ВГраница()];
    
    ИмяСкрипта     = ПолучитьИмяВременногоФайла(".ps1");
    ТекстСкрипта   = Новый ТекстовыйДокумент();
    
    ТекстСкрипта.УстановитьТекст( 
    "magick "
    + Путь
    + " -pointsize "
    + РазмерШрифта
    + " -gravity Center -fill white -font Tahoma -annotate +0+0 '"
    + ТекстСтрокой
    + "' "
    + Путь
    );
    
    ТекстСкрипта.Записать(ИмяСкрипта, КодировкаТекста.UTF8);
    
    КодВозврата = 0;
    ЗапуститьПриложение("powershell -file " + ИмяСкрипта + " -noexit", , Истина, КодВозврата);
    
    УдалитьФайлы(ИмяСкрипта);
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
