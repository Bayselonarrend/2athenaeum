#Область ПрограммныйИнтерфейс

Функция Запостить(Знач Пост = "", Знач СтруктураЗаписи = "", Знач Сообщество, Знач ЭтоРеклама = Ложь) Экспорт
	
	Параметры 			= Новый Структура;
	ВложенияОтправки 	= Новый Массив;
	
	ТекстПоста			= ?(ЗначениеЗаполнено(Пост), ФормированиеПостовСервер.СформироватьТекстПоста(Пост), СтруктураЗаписи.Текст);
	
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	Параметры.Вставить("message", ТекстПоста);
	
	ИВФ = ПолучитьИмяВременногоФайла(".png");
	
	Если Пост = "" 
		Или Пост.ВидКартинки = Перечисления.ВидыКартинок.Одиночная 
		Или Пост.ВидКартинки = Перечисления.ВидыКартинок.ПустаяСсылка() Тогда
		
		Если ЗначениеЗаполнено(Пост) Тогда
			ДД 	= Пост.КартинкаДвоичные.Получить();
			
			ДопПараметры = Новый Соответствие;
			
			Если ТипЗнч(Пост.Содержание) = Тип("СправочникСсылка.Картины") Тогда
				Альбом = Пост.Содержание.Стиль.ВК_Альбом;
				Если ЗначениеЗаполнено(Альбом) Тогда
					ДопПараметры.Вставить("Аннотация"	, "");
				КонецЕсли;
				
			Иначе
				
				Альбом = Пост.Сообщество.IDАльбома;
				Если ЗначениеЗаполнено(Альбом) Тогда
					ДопПараметры.Вставить("Аннотация"	, ТекстПоста);
				КонецЕсли;

				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДД) Тогда
				ВложенияОтправки.Добавить(СохранитьФото(Пост.Картинка, Сообщество, Истина, ДопПараметры));
			Иначе
				ДД.Записать(ИВФ);
				ВложенияОтправки.Добавить(СохранитьФото(ИВФ, Сообщество, Истина, ДопПараметры));
			КонецЕсли;
		Иначе
			ВложенияОтправки.Добавить(СохранитьФото(СтруктураЗаписи.Картинка, Сообщество, Истина));
		КонецЕсли;
		
	ИначеЕсли Пост.ВидКартинки = Перечисления.ВидыКартинок.Галерея Тогда
		
		ДД 	= Пост.КартинкаДвоичные.Получить();
		ДД.Записать(ИВФ);
		
		МассивКартинок = РаботаССистемойСервер.СформироватьГалерею(ИВФ);
		
		Первый = Истина;
		Для Каждого КартинкаГалереи Из МассивКартинок Цикл
			
			Если Первый Тогда
				ВложенияОтправки.Добавить(СохранитьФото(КартинкаГалереи, Сообщество, Истина));
				Первый = Ложь;
			Иначе
				ВложенияОтправки.Добавить(СохранитьФото(КартинкаГалереи, Сообщество, Ложь));
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Пост.ВидКартинки = Перечисления.ВидыКартинок.Термин Тогда
		ВложенияОтправки.Добавить(СохранитьФото(РаботаССистемойСервер.СформироватьТермин(Пост.Содержание), Сообщество, Ложь));
	ИначеЕсли Пост.ВидКартинки = Перечисления.ВидыКартинок.Событие Тогда
		ВложенияОтправки.Добавить(СохранитьФото(РаботаССистемойСервер.СформироватьСобытие(Пост.Содержание, Сообщество, Ложь), Сообщество, Ложь));

	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаВложений = "";
	
	Для Каждого Вложение Из ВложенияОтправки Цикл
		СтрокаВложений = СтрокаВложений + Вложение + ",";
	КонецЦикла;
	
	СтрокаВложений = Лев(СтрокаВложений, СтрДлина(СтрокаВложений) - 1);
	
	Если ЗначениеЗаполнено(СтруктураЗаписи) Тогда
		Если СтруктураЗаписи.Свойство("Ссылка") Тогда
			СтрокаВложений = СтрокаВложений + "," + СтруктураЗаписи["Ссылка"];
		КонецЕсли; 
	КонецЕсли;
	
	Параметры.Вставить("attachments"	, СтрокаВложений);
	Параметры.Вставить("mark_as_ads"	, ?(ЭтоРеклама, 1, 0));
	Параметры.Вставить("close_comments"	, ?(ЭтоРеклама, 1, 0));
	
	
	УдалитьФайлы(ИВФ);                    
	Ответ = ВК_Апи.wall_post(Параметры);
	
	НомерПоста = Ответ["response"]["post_id"];
	
	Если ЗначениеЗаполнено(Пост) И ТипЗнч(Пост) = Тип("ДокументСсылка.Пост") Тогда
		ОбъектПост = Пост.ПолучитьОбъект();
		ОбъектПост.ВК_НомерПоста = НомерПоста;
		ОбъектПост.Записать();
	КонецЕсли;
	
	Лайк(НомерПоста, Сообщество);
	
	Возврат НомерПоста;
	
КонецФункции

Функция ЗапоститьСложнопост(Знач Сложнопост, Знач Сообщество) Экспорт
	
	Параметры 			= Новый Структура;
	ВложенияОтправки 	= Новый Массив;
	
	ТекстПоста			= Сложнопост.Текст;
	ТекстПоста			= ?(ТекстПоста = "", " ", ТекстПоста);
	
	Для Каждого Ресурс Из Сложнопост.Ресурсы Цикл

		ИВФ = ПолучитьИмяВременногоФайла("png");
		
		СтруктураМедиа = Новый Структура;
		СтруктураМедиа.Вставить("МедиаДД", 	Ресурс.МедиаДД.Получить());
		СтруктураМедиа.Вставить("Медиа",	Ресурс.Медиа);
		СтруктураМедиа.Вставить("ТекстА",	Ресурс.ТекстА);
		СтруктураМедиа.Вставить("ТекстБ",	Ресурс.ТекстБ);
		СтруктураМедиа.Вставить("ТекстВ",	Ресурс.ТекстВ);
			
		Медиа = МетодыОбработкиИзображений.ОбработатьКартинкуПоШаблону(Ресурс.ВидОбработки, СтруктураМедиа);
	
		ВложенияОтправки.Добавить(СохранитьФото(Медиа, Сообщество, Ложь));
		
	КонецЦикла;

	СтрокаВложений = "";
	
	Для Каждого Вложение Из ВложенияОтправки Цикл
		СтрокаВложений = СтрокаВложений + Вложение + ",";
	КонецЦикла;
	
	СтрокаВложений = Лев(СтрокаВложений, СтрДлина(СтрокаВложений) - 1);

	
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	Параметры.Вставить("message", ТекстПоста);
	
	Параметры.Вставить("attachments"	, СтрокаВложений);
	Параметры.Вставить("mark_as_ads"	, 0);
	Параметры.Вставить("close_comments"	, 0);
	
	
	УдалитьФайлы(ИВФ);                    
	Ответ = ВК_Апи.wall_post(Параметры);
	
	НомерПоста = Ответ["response"]["post_id"];
	
	Лайк(НомерПоста, Сообщество);
	
	Возврат НомерПоста;
	
КонецФункции

Функция ПолучитьДанныеПользователя(Знач Код, Знач URL) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Справочники.Сообщества.Athenaeum);
	Параметры.Вставить("response_code"	, Код);
	Параметры.Вставить("redirect_url"	, URL);
	
	Возврат ВК_Апи.users_get(Параметры);
	
КонецФункции

Функция ПолучитьСтатистику(Знач Дата0, Знач Дата1, Знач Сообщество) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Дата0 = Формат(Дата0 - дата(1970,1,1,1,0,0), "ЧГ=0");
	Дата1 = Формат(Дата1 - дата(1970,1,1,1,0,0), "ЧГ=0");
	Параметры.Вставить("timestamp_from"	, Дата0);
	Параметры.Вставить("timestamp_to"	, Дата1);
	Параметры.Вставить("stats_groups"	, "visitors, reach, activity");
	
	Возврат ВК_Апи.stats_get(Параметры);
	
КонецФункции

Функция ОтправитьОтвет(Знач Пользователь, Знач Текст, Знач Клавиатура = Ложь) Экспорт
	
	Атеней			= Справочники.Сообщества.Athenaeum;
	Параметры		= Новый Структура;
	ВКПользователя  = ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(Пользователь, "VK").VK;
	ЗаполнитьСтандартныеПараметры(Параметры, Справочники.Сообщества.Athenaeum);
	
	
	Параметры.Вставить("user_id", СтрЗаменить(ВКПользователя, " ", ""));
	Параметры.Вставить("peer_id", СтрЗаменить(ВКПользователя, " ", ""));
	Параметры.Вставить("access_token", Атеней.ВК_communitytoken);
	Параметры.Вставить("random_id", 0);
	Параметры.Вставить("message", Текст);
	
	Если Клавиатура Тогда
		Параметры.Вставить("keyboard", СформироватьКлавиатуруПереходов());
	КонецЕсли;
	
	ВК_Апи.message_send(Параметры);
	
	РегистрыСведений.Диалоги.ЗаписатьСообщениеДиалога(
	Справочники.Пользователи.Ферапонт
	, Пользователь
	, Перечисления.СоцСети.VK
	, Текст);
	
	Возврат Истина;
	
КонецФункции

Функция АвторизоватьПользователяНаСайте(Знач Токен, Знач Печенька, Знач КодКниги = "") Экспорт
	
	ДанныеПользователя 	= ПолучитьДанныеПользователя(Токен, "https://api.athenaeum.digital/u/hs/bot/vklogin?uuid=" 
	+ Печенька 
	+ ?(ЗначениеЗаполнено(КодКниги), "_" + КодКниги, ""));
	ДанныеПользователя 	= ДанныеПользователя["response"][0];
	Заполнение			= Ложь;	 
	
	ИД				= ДанныеПользователя["id"];
	Имя				= ДанныеПользователя["first_name"] + " " + ДанныеПользователя["last_name"];	
	ПользовательИБ	= Справочники.Пользователи.НайтиПоРеквизиту("VK", Строка(ДанныеПользователя["id"]));
	
	Если ЗначениеЗаполнено(ПользовательИБ) И ПользовательИБ.Наименование = "Новый" Тогда
		СуществующийПользователь = ПользовательИБ.ПолучитьОбъект();
		СуществующийПользователь.Наименование = Имя;
		СуществующийПользователь.Записать();
	КонецЕсли;
	
	ПользовательПоПеченью 	= Сайт_Апи.ВернутьПользователяПоCookie(Печенька);
	ПользовательПоVK		= ПользовательИБ;
	ПользовательИБ			= ?(ЗначениеЗаполнено(ПользовательПоПеченью)
	, ПользовательПоПеченью
	, ПользовательИБ);
	
	
	Если Не ЗначениеЗаполнено(ПользовательИБ) Тогда
		
		НовыйПользователь 	= Справочники.Пользователи.СоздатьЭлемент();
		
		НовыйПользователь.ПерсональныеНастройки	= Справочники.ПерсональныеНастройки.Инициализировать(Имя);
		НовыйПользователь.VK 					= ИД;
		НовыйПользователь.Наименование 			= Имя;
		НовыйПользователь.ДатаРегистрации 		= ТекущаяДатаСеанса();
		НовыйПользователь.Записать();
		
		ПользовательИБ = НовыйПользователь.Ссылка;
		
	ИначеЕсли Не ЗначениеЗаполнено(ПользовательИБ.VK) Тогда
		
		Если ЗначениеЗаполнено(ПользовательПоVK) Тогда
			ОшибочныйПользователь = ПользовательПоVK.ПолучитьОбъект();
			ОшибочныйПользователь.Удалить();
		КонецЕсли;
		
		СуществующийПользователь = ПользовательИБ.ПолучитьОбъект();
		СуществующийПользователь.VK = ИД;
		СуществующийПользователь.Записать();
		Заполнение = Истина;
		
	КонецЕсли;       
	
	Если ЗначениеЗаполнено(Печенька) И Не Заполнение Тогда
		МЗ = РегистрыСведений.АктивныеСеансы.СоздатьМенеджерЗаписи();
		МЗ.Cookie 		= Печенька;
		МЗ.Дата 		= ТекущаяДатаСеанса();
		МЗ.Пользователь	= ПользовательИБ;
		МЗ.Записать(Истина);
	КонецЕсли;
	
	Если ПользовательИБ.РазрешилПисатьVK Тогда
		
		Если ЗначениеЗаполнено(КодКниги)  Тогда
			
			ЗапрашиваемыйТекст	= Справочники.Произведения.НайтиПоКоду(вРег(КодКниги));
			
			Если ЗначениеЗаполнено(ЗапрашиваемыйТекст) Тогда
				
				ТекстОтвета 	= "Вы авторизованы! А вот и ваше произведение - " 
				+ "«" 
				+ ЗапрашиваемыйТекст.Наименование 
				+ "», " 
				+ ЗапрашиваемыйТекст.Автор
				+ "!";
				
				МестоВТексте	= МетодыБота.ВернутьМестоВТексте(ПользовательИБ, ЗапрашиваемыйТекст);
				ПоследнийТекст 	= Новый Структура;
				Клавиатура		= Истина;
				ПоследнийТекст.Вставить("Текст"	, ЗапрашиваемыйТекст);
				ПоследнийТекст.Вставить("Слов"	, МестоВТексте);
				
				Если МестоВТексте = 0 Тогда				
					Блок = МетодыБота.ВернутьБлок(ПоследнийТекст, "->", ПользовательИБ, Ложь);				
				Иначе				
					Блок = МетодыБота.ВернутьБлок(ПоследнийТекст, "<-", ПользовательИБ, Ложь);						
				КонецЕсли;
				
				ВК_Действия.ОтправитьОтвет(ПользовательИБ, ТекстОтвета, Истина);
				ВК_Действия.ОтправитьОтвет(ПользовательИБ, Блок, Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		Возврат 200
	Иначе
		
		Если ЗначениеЗаполнено(КодКниги)  Тогда
			
			ЗапрашиваемыйТекст	= Справочники.Произведения.НайтиПоКоду(вРег(КодКниги));
			
			Если ЗначениеЗаполнено(ЗапрашиваемыйТекст) Тогда
				
				МЗ = РегистрыСведений.ПотоковоеЧтение.СоздатьМенеджерЗаписи();
				МЗ.Пользователь = ПользовательИБ;
				МЗ.Текст 		= ЗапрашиваемыйТекст;
				МЗ.Прочитать();
				
				МЗ.Дата = ТекущаяДатаСеанса();
				
				МЗ.Пользователь = ПользовательИБ;
				МЗ.Текст 		= ЗапрашиваемыйТекст;
				
				МЗ.НачалоВК = Истина;
				МЗ.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат 302
	КонецЕсли;
	
КонецФункции

Функция СократитьСсылку(Знач URL) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Справочники.Сообщества.Athenaeum);
	
	Параметры.Вставить("url"	, URL);
	Ответ = ВК_Апи.utils_getShortLink(Параметры);
	Возврат Ответ["response"]["short_url"];
	
КонецФункции

Функция УдалитьПост(Знач ID, Знач Сообщество) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Параметры.Вставить("post_id"	, ID);
	Параметры.Вставить("owner_id"	, "-" + Сообщество.ВК_owner_id);
	
	Возврат ВК_Апи.wall_delete(Параметры);
	
КонецФункции

Функция СоздатьРекламнуюКомпанию(Знач Сообщество) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Параметры.Вставить("account_id"		, Сообщество.ВК_Кабинет.ID);
	Параметры.Вставить("access_token"	, Сообщество.ВК_Кабинет.Токен);
	
	МассивСтруктур = Новый Массив;
	
	СтруктураКампании = Новый Структура;
	СтруктураКампании.Вставить("type"			, "promoted_posts");
	СтруктураКампании.Вставить("name"			, "AIO - " + Сообщество.Наименование);
	СтруктураКампании.Вставить("day_limit"		, 0);
	СтруктураКампании.Вставить("all_limit"		, 0);
	СтруктураКампании.Вставить("start_time"		, Формат(ТекущаяДатаСеанса() - Дата(1970,1,1,1,0,0), "ЧГ=0"));
	СтруктураКампании.Вставить("stop_time"		, Формат('2120.01.01' - Дата(1970,1,1,1,0,0), "ЧГ=0"));
	СтруктураКампании.Вставить("status"			, 1);
	
	МассивСтруктур.Добавить(СтруктураКампании);
	
	JSONДата = ИнструментарийВызовСервера.JSONСтрокой(МассивСтруктур);
	
	Параметры.Вставить("data", JSONДата);
	
	Ответ = ВК_Апи.ads_createCampaigns(Параметры);
	
	Возврат Ответ["response"][0]["id"];
	
КонецФункции

Процедура СоздатьРекламноеОбъявление(Знач Пост) Экспорт
	
	Если ЗначениеЗаполнено(Пост.Сообщество.ВК_НомерКомпании) 
		И ЗначениеЗаполнено(Пост.Сообщество.ВК_Кабинет) 
		И ЗначениеЗаполнено(Пост.ВК_НомерПоста) 
		И Не Пост.Сообщество.КоличествоОбъявлений = 0 Тогда
		
		
		КоличествоЗаписей = Пост.Сообщество.Объявления.Количество();
		Если КоличествоЗаписей < Пост.Сообщество.КоличествоОбъявлений Тогда
			
			Параметры = Новый Структура;
			ЗаполнитьСтандартныеПараметры(Параметры, Пост.Сообщество);
			
			ПорядковыйНомер = КоличествоЗаписей + 1;
			
			МассивСтруктур = Новый Массив;
			
			СтруктураКампании = Новый Структура;
			СтруктураКампании.Вставить("campaign_id"				, Пост.Сообщество.ВК_НомерКомпании);
			СтруктураКампании.Вставить("ad_format"					, 9);
			СтруктураКампании.Вставить("conversion_event_id"		, 1);
			СтруктураКампании.Вставить("autobidding"				, 1);
			СтруктураКампании.Вставить("cost_type"					, 3);
			СтруктураКампании.Вставить("goal_type"					, 2);
			СтруктураКампании.Вставить("ad_platform"				, "all");
			СтруктураКампании.Вставить("publisher_platforms"		, "vk");
			СтруктураКампании.Вставить("publisher_platforms_auto"	, "1");
			СтруктураКампании.Вставить("day_limit"					, Пост.Сообщество.ВК_ДневнойЛимитНаЗапись);
			СтруктураКампании.Вставить("all_limit"					, "0");
			СтруктураКампании.Вставить("category1_id"				, Пост.Сообщество.ВК_НомерКатегории);
			СтруктураКампании.Вставить("age_restriction"			, 0);
			СтруктураКампании.Вставить("status"						, 1);
			СтруктураКампании.Вставить("name"						, "Объявление " + Строка(ПорядковыйНомер));
			СтруктураКампании.Вставить("link_url"					, "https://vk.com/wall-" + Пост.Сообщество.ВК_owner_id + "_" + Пост.ВК_НомерПоста);
			
			МассивСтруктур.Добавить(СтруктураКампании);
			
			JSONДата = ИнструментарийВызовСервера.JSONСтрокой(МассивСтруктур);
			
			Параметры.Вставить("data", JSONДата);
			Параметры.Вставить("account_id"		, Пост.Сообщество.ВК_Кабинет.ID);
			Параметры.Вставить("access_token"	, Пост.Сообщество.ВК_Кабинет.Токен);
			
			Ответ = ВК_Апи.ads_createAds(Параметры);
			
			IDОбъявления = Ответ["response"][0]["id"];
			
			Если ЗначениеЗаполнено(IDОбъявления) Тогда
				ОбъектСообщество 	= Пост.Сообщество.ПолучитьОбъект();
				НовоеОбъявление 	= ОбъектСообщество.Объявления.Добавить();
				НовоеОбъявление.ID 	= IDОбъявления;
				НовоеОбъявление.ДатаОбновления = ТекущаяДатаСеанса();
				ОбъектСообщество.Записать();
			КонецЕсли;
			
		Иначе
			
			РекламироватьПост(Пост);
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Функция ОстановитьОбъявление(Знач ID, Знач Кабинет) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Справочники.Сообщества.Athenaeum);
	
	Параметры.Вставить("account_id"		, Кабинет.ID);
	Параметры.Вставить("access_token"	, Кабинет.Токен);
	
	
	МассивСтруктур = Новый Массив;
	
	СтруктураКампании = Новый Структура;
	СтруктураКампании.Вставить("ad_id"			, ID);
	СтруктураКампании.Вставить("status"			, 0);
	
	МассивСтруктур.Добавить(СтруктураКампании);
	
	JSONДата = ИнструментарийВызовСервера.JSONСтрокой(МассивСтруктур);
	
	Параметры.Вставить("data", JSONДата);
	
	Ответ = ВК_Апи.ads_updateAds(Параметры);
	
	Возврат Ответ["response"][0]["id"];
	
КонецФункции

Процедура РекламироватьПост(Пост) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СообществаОбъявления.НомерСтроки КАК НомерСтроки,
	|	СообществаОбъявления.ID КАК ID
	|ИЗ
	|	Справочник.Сообщества.Объявления КАК СообществаОбъявления
	|ГДЕ
	|	СообществаОбъявления.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СообществаОбъявления.ДатаОбновления";
	
	Запрос.УстановитьПараметр("Ссылка", Пост.Сообщество);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Параметры = Новый Структура;
		ЗаполнитьСтандартныеПараметры(Параметры, Справочники.Сообщества.Athenaeum);
		
		Параметры.Вставить("account_id"		, Пост.Сообщество.ВК_Кабинет.ID);
		Параметры.Вставить("access_token"	, Пост.Сообщество.ВК_Кабинет.Токен);
		
		МассивСтруктур = Новый Массив;
		
		СтруктураКампании = Новый Структура;
		СтруктураКампании.Вставить("ad_id"		, ВыборкаДетальныеЗаписи.ID);
		СтруктураКампании.Вставить("status"		, 1);
		СтруктураКампании.Вставить("link_url"	, "https://vk.com/wall-" + Пост.Сообщество.ВК_owner_id + "_" + Пост.ВК_НомерПоста);
		
		МассивСтруктур.Добавить(СтруктураКампании);
		
		JSONДата = ИнструментарийВызовСервера.JSONСтрокой(МассивСтруктур);
		
		Параметры.Вставить("data", JSONДата);
		
		Ответ 			= ВК_Апи.ads_updateAds(Параметры);
		IDОбъявления 	= Ответ["response"][0]["id"];
		
		Если ЗначениеЗаполнено(IDОбъявления) Тогда
			
			ОбъектСообщество 	= Пост.Сообщество.ПолучитьОбъект();			
			СтрокаТаблицы 		= ОбъектСообщество.Объявления.Найти(IDОбъявления, "ID"); 
			
			Если Не СтрокаТаблицы = Неопределено Тогда
				СтрокаТаблицы.ДатаОбновления = ТекущаяДатаСеанса();
			Иначе
				НоваяСтрока = ОбъектСообщество.Объявления.Добавить();
				НоваяСтрока.ID 				= IDОбъявления;
				НоваяСтрока.ДатаОбновления 	= ТекущаяДатаСеанса();
			КонецЕсли;
			
			ОбъектСообщество.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция СделатьРепост(Знач Пост, Знач Бот, Знач Сообщество = "", Знач Прокси = "") Экспорт
	
	Параметры = Новый Структура;
	ПараметрыЛайка = Новый Структура;
	Параметры.Вставить("object", "wall-" + Пост.Сообщество.ВК_owner_id + "_" + Строка(Пост.ВК_НомерПоста));
	ПараметрыЛайка.Вставить("object", "wall-" + Пост.Сообщество.ВК_owner_id + "_" + Строка(Пост.ВК_НомерПоста));
	
	Если ЗначениеЗаполнено(Сообщество) Тогда		
		ЗаполнитьСтандартныеПараметры(Параметры,Сообщество);
		Параметры.Вставить("group_id", Сообщество.ВК_owner_id);
	Иначе
		ЗаполнитьСтандартныеПараметры(Параметры, Бот);
		
		ЗаполнитьСтандартныеПараметры(ПараметрыЛайка, Бот);
		ПараметрыЛайка.Вставить("owner_id", "-" + Пост.Сообщество.ВК_owner_id);
		ПараметрыЛайка.Вставить("item_id", Строка(Пост.ВК_НомерПоста));
		
		
		ВК_Апи.likes_add(ПараметрыЛайка, Прокси);
	КонецЕсли;
	
	
	Возврат ВК_Апи.wall_repost(Параметры, Прокси);
	
КонецФункции

Процедура Лайк(Знач НомерПоста, Знач Сообщество) Экспорт
	
	Попытка
		ПараметрыЛайка = Новый Структура;
		ПараметрыЛайка.Вставить("object", "wall-" + Сообщество.ВК_owner_id + "_" + Строка(НомерПоста));
		ЗаполнитьСтандартныеПараметры(ПараметрыЛайка, Сообщество);
		ПараметрыЛайка.Вставить("owner_id", "-" + Сообщество.ВК_owner_id);
		ПараметрыЛайка.Вставить("item_id", Строка(НомерПоста));
		
		ВК_Апи.likes_add(ПараметрыЛайка);
	Исключение
		ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки(), "Лайк не поставился");
	КонецПопытки;

КонецПроцедуры

Функция ПолучитьПоследнийПостСообщества(Знач ID, Знач Бот, Знач Прокси) Экспорт
	
	  Параметры = Новый Структура;
	  ЗаполнитьСтандартныеПараметры(Параметры, Бот);
	  Параметры.Вставить("owner_id", ID);
	  
	  Возврат ВК_Апи.wall_get(Параметры, Прокси)["response"]["items"][1];
	  
КонецФункции

Функция СоздатьАльбом(Знач Наименование, Знач Описание, Знач Сообщество) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Параметры.Вставить("group_id"	, Сообщество.ВК_owner_id);
	Параметры.Вставить("title"		, Наименование);
	Параметры.Вставить("description", Описание);
	Параметры.Вставить("upload_by_admins_only", 1);
	
	Возврат ВК_Апи.photos_createAlbum(Параметры)["response"]["id"];
	
КонецФункции

Процедура СоздатьОпрос(Знач Вопрос, Знач МассивОтветов, Знач Сообщество, Знач ФотоДД) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Параметры.Вставить("owner_id", "-" + Сообщество.ВК_owner_id);
	Параметры.Удалить("from_group");
	
	АП = Параметры["app_id"];
	Параметры.Удалить("app_id");

	Ответ 		= ВК_Апи.polls_getPhotoUploadServer(Параметры);
	
	Параметры.Вставить("upload_url"	, Строка(Ответ.Получить("response").Получить("upload_url")));
	
	Картинка = ФотоДД;
	
	Файлы = Новый Структура;
	Файлы.Вставить("Имя"			, "photo");
	Файлы.Вставить("ИмяФайла"		, "background.png");
	Файлы.Вставить("Данные"			, Картинка);
	Файлы.Вставить("Тип"			, "image/jpeg");
	Ответ = КоннекторHTTP.КакJson(КоннекторHTTP.Post(Параметры["upload_url"], Параметры, Новый Структура("Файлы", Файлы)));
	
	//Параметры.Вставить("server"	, СтрЗаменить(Строка(Ответ["server"]), Символы.НПП, ""));
	Параметры.Вставить("photo"	, Ответ["photo"]);
	Параметры.Вставить("hash"	, Ответ["hash"]);
	
	Ответ 				= ВК_Апи.polls_savePhoto(Параметры);     
	ОтветСоответствие 	= Ответ.Получить("response")["id"];

	
	Параметры.Вставить("is_anonymous", 1);
	Параметры.Вставить("is_multiple", 0);
		
	Ответы = "[";
	Первый	= Истина;
	
	Для Каждого Ответ Из МассивОтветов Цикл
		
		Если Первый Тогда Первый = Ложь Иначе Ответы = Ответы + ", "; КонецЕсли;
		
		Ответы = Ответы + """"+ Ответ + """";
		
	КонецЦикла;
	
	Ответы = Ответы + "]";
	
	Параметры.Вставить("app_id", АП);
	Параметры.Вставить("add_answers"	, Ответы);
	Параметры.Вставить("photo_id"		, ОтветСоответствие);
	Параметры.Вставить("question"		, Вопрос);
	Параметры.Удалить("upload_url");
	Параметры.Удалить("hash");
	Параметры.Удалить("photo");
	
	Опрос =  ВК_Апи.polls_create(Параметры);
	
	Параметры.Вставить("from_group"		, "1");
	Параметры.Вставить("owner_id"		, Сообщество.ВК_owner_id);
	Параметры.Вставить("attachments"	, "poll" + Сообщество.ВК_owner_id + "_" + Опрос["response"]["id"]);
	Ответ = ВК_Апи.wall_post(Параметры);
	
	Попытка
		НомерПоста = Ответ["response"]["post_id"];
		Лайк(НомерПоста, Сообщество);
	Исключение
		ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки(), "Опрос - Лайк");
	КонецПопытки;
	
КонецПроцедуры

Процедура ПолучитьСтатистикуПостов(Знач Дней, Знач Сообщество) Экспорт
	
	Параметры = Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	
	Параметры.Вставить("owner_id", -Параметры["owner_id"]);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПорядокПостов.Пост КАК Пост,
		|	ПорядокПостов.Пост.ВК_НомерПоста КАК ПостВК_НомерПоста
		|ИЗ
		|	РегистрСведений.ПорядокПостов КАК ПорядокПостов
		|ГДЕ
		|	ПорядокПостов.Опубликован
		|	И ПорядокПостов.ДатаПубликации >= &КрайняяДата
		|	И ПорядокПостов.Пост.ВК_НомерПоста <> 0";
	
	Запрос.УстановитьПараметр("КрайняяДата", НачалоДня(ТекущаяДатаСеанса()) - Дней * 60 * 60 * 24);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи 	= РезультатЗапроса.Выбрать();
	МассивПостов			= Новый Массив;
	СтрокаНомеров			= "";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		МассивПостов.Добавить(ВыборкаДетальныеЗаписи.Пост);
		СтрокаНомеров = СтрокаНомеров + ВыборкаДетальныеЗаписи.ПостВК_НомерПоста + ",";
		
		Если МассивПостов.Количество() = 30 Тогда
			
			СтрокаНомеров = Лев(СтрокаНомеров, СтрДлина(СтрокаНомеров) - 1);
			Параметры.Вставить("post_ids", СтрокаНомеров);
			
			Статистика = ВК_Апи.stats_getPostReach(Параметры);
			
			МассивСтатистики = Статистика["response"];
			
			Для Н = 0 По МассивПостов.ВГраница() Цикл
				
				ЭлементСтатистики = МассивСтатистики[Н];
				
				МЗ = РегистрыСведений.СтатистикаЗаписей.СоздатьМенеджерЗаписи();
				МЗ.Пост 				= МассивПостов[Н];
				МЗ.Вступлений 			= ЭлементСтатистики["join_group"];
				МЗ.Отписок 				= ЭлементСтатистики["unsubscribe"];
				МЗ.ОхватВиральный 		= ЭлементСтатистики["reach_viral"];
				МЗ.ОхватПодписчиков 	= ЭлементСтатистики["reach_subscribers"];
				МЗ.ОхватрРекламы 		= ЭлементСтатистики["reach_ads"];
				МЗ.Переходов 			= ЭлементСтатистики["to_group"];
				МЗ.Скрытий 				= ЭлементСтатистики["hide"];
				МЗ.СуммарныйОхват 		= ЭлементСтатистики["reach_total"];
				МЗ.Оценка				= (МЗ.Вступлений - МЗ.Отписок + МЗ.Переходов - МЗ.Скрытий) / ?(МЗ.СуммарныйОхват = 0, 99999999, МЗ.СуммарныйОхват) * 10000; 
				МЗ.Записать(Истина);
				
			КонецЦикла;
			
			МассивПостов 	= Новый Массив;
			СтрокаНомеров 	= "";
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаНомеров = Лев(СтрокаНомеров, СтрДлина(СтрокаНомеров) - 1);
			Параметры.Вставить("post_ids", СтрокаНомеров);
			
			Статистика = ВК_Апи.stats_getPostReach(Параметры);
			
			МассивСтатистики = Статистика["response"];
			
			Для Н = 0 По МассивПостов.ВГраница() Цикл
				
				ЭлементСтатистики = МассивСтатистики[Н];
				
				МЗ = РегистрыСведений.СтатистикаЗаписей.СоздатьМенеджерЗаписи();
				МЗ.Пост 				= МассивПостов[Н];
				МЗ.Вступлений 			= ЭлементСтатистики["join_group"];
				МЗ.Отписок 				= ЭлементСтатистики["unsubscribe"];
				МЗ.ОхватВиральный 		= ЭлементСтатистики["reach_viral"];
				МЗ.ОхватПодписчиков 	= ЭлементСтатистики["reach_subscribers"];
				МЗ.ОхватрРекламы 		= ЭлементСтатистики["reach_ads"];
				МЗ.Переходов 			= ЭлементСтатистики["to_group"];
				МЗ.Скрытий 				= ЭлементСтатистики["hide"];
				МЗ.СуммарныйОхват 		= ЭлементСтатистики["reach_total"];
				МЗ.Оценка				= (МЗ.Вступлений - МЗ.Отписок + МЗ.Переходов - МЗ.Скрытий) / МЗ.СуммарныйОхват; 
				МЗ.Записать(Истина);
				
			КонецЦикла;

	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСтандартныеПараметры(Параметры = "", Сообщество)
	
	Если ТипЗнч(Параметры) <> Тип("Структура") Тогда
		Параметры = Новый Структура;
	КонецЕсли; 
	
	Параметры.Вставить("access_token"	, Сообщество.ВК_access_token);
	Параметры.Вставить("from_group"		, "1");
	Параметры.Вставить("owner_id"		, Сообщество.ВК_owner_id);
	Параметры.Вставить("v"				, Сообщество.ВК_V);
	Параметры.Вставить("app_id"			, Сообщество.ВК_client_id);
	
КонецПроцедуры

Функция СохранитьФото(Знач Фото = "", Знач Сообщество, Знач ВАльбом = Ложь, Знач ДопПараметры = "")
	
	Если Не ЗначениеЗаполнено(ДопПараметры) Тогда
		ДопПараметры = Новый Соответствие;
	КонецЕсли;
	
	Параметры 	= Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	Ответ 		= ВК_Апи.photos_getWallUploadServer(Параметры);
	
	Параметры.Вставить("upload_url"	, Строка(Ответ.Получить("response").Получить("upload_url")));
	
	ИВФ = ПолучитьИмяВременногоФайла("jpeg");
	КопироватьФайл(Фото, ИВФ);
	Картинка = Новый ДвоичныеДанные(ИВФ);
	
	Файлы = Новый Структура;
	Файлы.Вставить("Имя"			, "photo");
	Файлы.Вставить("ИмяФайла"		, ИВФ);
	Файлы.Вставить("Данные"			, Картинка);
	Файлы.Вставить("Тип"			, "image/jpeg");
	Ответ = КоннекторHTTP.КакJson(КоннекторHTTP.Post(Параметры["upload_url"], Параметры, Новый Структура("Файлы", Файлы)));
	
	Параметры.Вставить("server"	, СтрЗаменить(Строка(Ответ["server"]), Символы.НПП, ""));
	Параметры.Вставить("photo"	, Ответ["photo"]);
	Параметры.Вставить("hash"	, Ответ["hash"]);
	
	Ответ 				= ВК_Апи.photos_saveWallPhoto(Параметры);
	ОтветСоответствие 	= Ответ.Получить("response")[0];
	
	Если ЗначениеЗаполнено(Сообщество.IDАльбома) И ВАльбом Тогда
		
		Параметры 	= Новый Структура;
		ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
		
		Параметры.Вставить("album_id"		, Сообщество.IDАльбома);
		
		СерверАльбома 		= ВК_Апи.photos_getUploadServer(Параметры);	
		Параметры.Вставить("upload_url"	, Строка(СерверАльбома.Получить("response").Получить("upload_url")));
		
		Файлы = Новый Структура;
		Файлы.Вставить("Имя"			, "file1");
		Файлы.Вставить("ИмяФайла"		, ИВФ);
		Файлы.Вставить("Данные"			, Картинка);
		Файлы.Вставить("Тип"			, "image/jpeg");
		
		ОтветАльбома = КоннекторHTTP.КакJson(КоннекторHTTP.Post(Параметры["upload_url"], Параметры, Новый Структура("Файлы", Файлы)));
		
		Параметры.Вставить("server"			, СтрЗаменить(Строка(ОтветАльбома["server"]), Символы.НПП, ""));
		Параметры.Вставить("photos_list"	, ОтветАльбома["photos_list"]);
		Параметры.Вставить("hash"			, ОтветАльбома["hash"]);
		Параметры.Вставить("aid"			, ОтветАльбома["aid"]);
		
		ОтветАльбом = ВК_Апи.photos_save(Параметры);
		
		Если ДопПараметры.Получить("Альбом") <> Неопределено Тогда
			
			Параметры 	= Новый Структура;
			ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);

			Параметры.Вставить("album_id"		, ДопПараметры.Получить("Альбом"));
			
			СерверАльбома 		= ВК_Апи.photos_getUploadServer(Параметры);	
			Параметры.Вставить("upload_url"	, Строка(СерверАльбома.Получить("response").Получить("upload_url")));
			
			ОтветАльбома = КоннекторHTTP.КакJson(КоннекторHTTP.Post(Параметры["upload_url"], Параметры, Новый Структура("Файлы", Файлы)));
			
			Параметры.Вставить("server"			, СтрЗаменить(Строка(ОтветАльбома["server"]), Символы.НПП, ""));
			Параметры.Вставить("photos_list"	, ОтветАльбома["photos_list"]);
			Параметры.Вставить("hash"			, ОтветАльбома["hash"]);
			Параметры.Вставить("aid"			, ОтветАльбома["aid"]);
			Параметры.Вставить("caption"		, ДопПараметры.Получить("Аннотация"));
			
			ОтветАльбом = ВК_Апи.photos_save(Параметры);

		КонецЕсли;
		
	КонецЕсли;
	
	
	УдалитьФайлы(ИВФ);
	
	Возврат "photo" 
	+  СтрЗаменить(Строка(ОтветСоответствие.Получить("owner_id")), Символы.НПП, "") 
	+ "_" 
	+   СтрЗаменить(Строка(ОтветСоответствие.Получить("id")), Символы.НПП, "");
	
КонецФункции

Функция СоздатьИсторию(Знач Фото = "", Знач Сообщество) Экспорт
	
	Параметры 	= Новый Структура;
	ЗаполнитьСтандартныеПараметры(Параметры, Сообщество);
	Параметры.Вставить("access_token"	, Сообщество.ВК_communitytoken);
	Параметры.Вставить("link_text"		, "more");
	Параметры.Вставить("link_url"		, Сообщество.СсылкаVK);
	Ответ 		= ВК_Апи.stories_getPhotoUploadServer(Параметры);
	
	Параметры.Вставить("upload_url"	, Строка(Ответ.Получить("response").Получить("upload_url")));
	
	ИВФ = ПолучитьИмяВременногоФайла("jpeg");
	КопироватьФайл(Фото, ИВФ);
	Картинка = Новый ДвоичныеДанные(ИВФ);
	
	Файлы = Новый Структура;
	Файлы.Вставить("Имя"			, "photo");
	Файлы.Вставить("ИмяФайла"		, ИВФ);
	Файлы.Вставить("Данные"			, Картинка);
	Файлы.Вставить("Тип"			, "image/jpeg");
	
	Ответ = КоннекторHTTP.КакJson(КоннекторHTTP.Post(Параметры["upload_url"], Параметры, Новый Структура("Файлы", Файлы)));
	
	Параметры.Вставить("upload_results"	, Ответ["response"]["upload_result"]);
	
	Ответ 				= ВК_Апи.stories_save(Параметры);
	
	УдалитьФайлы(ИВФ);
	
	Возврат Истина
КонецФункции

Функция СформироватьКлавиатуруПереходов() 
	
	МассивДействий = Новый Массив;
	МассивДействий.Добавить("<-");
	МассивДействий.Добавить("->");
	
	Клавиатура 			= Новый Структура;
	МассивКлавиатуры 	= Новый Массив;
	МассивБлока 		= Новый Массив;
	
	Для Каждого Действие Из МассивДействий Цикл
		
		Кнопка 		= Новый Структура;
		Выражение 	= Новый Структура;
		
		Выражение.Вставить("type", "text");
		Выражение.Вставить("label", Действие);
		
		Кнопка.Вставить("action", Выражение);
		МассивБлока.Добавить(Кнопка);
		
	КонецЦикла;
	
	МассивКлавиатуры.Добавить(МассивБлока);
	
	Клавиатура.Вставить("buttons", МассивКлавиатуры);	
	Клавиатура.Вставить("one_time", Ложь);
	
	Возврат ИнструментарийВызовСервера.JSONСтрокой(Клавиатура);
	
КонецФункции

#КонецОбласти



