#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Код) Тогда
		
		Объект.Код 		= ИнструментарийВызовСервера.ГенерацияСлучайногоСимвола();
		Существующий 	= Справочники.Произведения.НайтиПоКоду(Объект.Код);
		
		Пока ЗначениеЗаполнено(Существующий) Цикл
			Объект.Код 		= ИнструментарийВызовСервера.ГенерацияСлучайногоСимвола();
			Существующий 	= Справочники.Произведения.НайтиПоКоду(Объект.Код);
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПорядковыйНомер();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КартинкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Диалог 					= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок 		= Строка("Выберите файл");
	ОповещениеЗавершения 	= Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура НаСайтеПриИзменении(Элемент)
	УстановитьПорядковыйНомер();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьТекст(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПриВыбореФайла", ЭтотОбъект);
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНаСайт(Команда)
	Записать();
	ЗагрузитьНаСайтНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Объект.Картинка = ВыбранныеФайлы[0];
		ЗаписатьДвоичныеДанныеКартинки(Новый ДвоичныеДанные(Объект.Картинка));
		
		Закрыть();
		ПерейтиПоНавигационнойСсылке(ПолучитьНавигационнуюСсылку(ЭтотОбъект));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореФайла(ВыбФайлы, ДополнительныеПараметры) Экспорт
	
	#Если НЕ ВебКлиент Тогда
		
		Если ВыбФайлы <> Неопределено Тогда
			
			Путь 				= ВыбФайлы[0];
			ТекстВременный 	= Новый ЧтениеТекста(Путь);
			МаксимальныйНомер = 999;
			
			ТекстСтрокой = ТекстВременный.Прочитать();
			
			Для Н = 0 По МаксимальныйНомер Цикл
				
				ПредыдущийНомер = Строка(МаксимальныйНомер - Н);
				
				ТекстСтрокой = СтрЗаменить(ТекстСтрокой, "&#" 	+ ПредыдущийНомер + ";", Символ(МаксимальныйНомер - Н));
				
				ТекстСтрокой = СтрЗаменить(ТекстСтрокой, Символы.ПС 
				+ Символы.ПС 
				+ "[" 	
				+ ПредыдущийНомер 
				+ "]" 
				+ Символы.ПС 
				+ Символы.ПС, "");
				
				ТекстСтрокой = СтрЗаменить(ТекстСтрокой, Символы.ПС + "[" 	+ ПредыдущийНомер + "]" + Символы.ПС, "");
				ТекстСтрокой = СтрЗаменить(ТекстСтрокой, "[" 	+ ПредыдущийНомер + "]", "");
				
			КонецЦикла;
			
			УдалитьЗапрещенныеСимволы(ТекстСтрокой);
			НайтиЛишниеДанные(ТекстСтрокой);
			
			ТекстФайла = СтрРазделить(ТекстСтрокой, " ", Ложь);
			
			Записать();
			ЗаписатьТекстНаСервере(ТекстФайла);
			
			Прочитать();		
		КонецЕсли;
		
	#КонецЕсли  
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТекстНаСервере(ТекстФайла)
	
	Об 			= Объект.Ссылка.ПолучитьОбъект();	
	НовыйТекст 	= Справочники.ТекстыПроизведений.СоздатьЭлемент();
	
	НовыйТекст.Наименование = Об.Наименование;
	НовыйТекст.Владелец		= Об.Ссылка;
	
	ОднаСтраница	= 70;
	ТекстБлока		= "";
	Слов 			= 0;
	НовыйБлок   	= Слов + ОднаСтраница;
	
	НомерСтраницы   = 1;
	Н 				= Слов;            
	
	Пока Не Н > ТекстФайла.Количество() - 1    Цикл
		
		ТекстБлока = ТекстБлока + " " + ТекстФайла[Н];    
		Н = Н +  1;  
		
		Если Н = НовыйБлок Тогда
			
			НоваяСтраница = НовыйТекст.Страницы.Добавить();
			НоваяСтраница.Слов  = НовыйБлок;
			НоваяСтраница.Текст = ТекстБлока;
			
			ТекстБлока      = "";
			НомерСтраницы   = НомерСтраницы + 1;
			НовыйБлок 		= НовыйБлок + ОднаСтраница;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстБлока) Тогда
		
		НоваяСтраница = НовыйТекст.Страницы.Добавить();
		НоваяСтраница.Слов  = НовыйБлок;
		НоваяСтраница.Текст = ТекстБлока;
		
		ТекстБлока      = "";
		НомерСтраницы   = НомерСтраницы + 1;
		НовыйБлок 		= НовыйБлок + ОднаСтраница;
				
	КонецЕсли;
	
	НовыйТекст.Записать();
	
	Об.Текст		= "Загружен: " + Строка(ТекстФайла.Количество()) + " слов";
	Об.Слов			= ТекстФайла.Количество();
	Об.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДвоичныеДанныеКартинки(ДД)
	
	Записать();
	ОбъектПост 					= Объект.Ссылка.ПолучитьОбъект();
	ОбъектПост.КартинкаДвоичные = Новый ХранилищеЗначения(ДД);
	ОбъектПост.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСайтНаСервере()
	МетодыСтатикиСайта.ОбновитьКнигу(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура УстановитьПорядковыйНомер()
	
	Если Не ЗначениеЗаполнено(Объект.ПорядковыйНомер) И Объект.НаСайте Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Произведения.ПорядковыйНомер) КАК ПорядковыйНомер
		|ИЗ
		|	Справочник.Произведения КАК Произведения
		|ГДЕ
		|	Произведения.НаСайте = ИСТИНА";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			МаксимальноеЧисло = ВыборкаДетальныеЗаписи.ПорядковыйНомер;
		Иначе 
			МаксимальноеЧисло = 1;
		КонецЕсли;
		
		Объект.ПорядковыйНомер = МаксимальноеЧисло + 1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗапрещенныеСимволы(Текст)
	
	МассивЗапрещенныхСимволов = Новый Соответствие;  
	МассивЗапрещенныхСимволов.Вставить("&#", "-");
	МассивЗапрещенныхСимволов.Вставить("„" , """");
	МассивЗапрещенныхСимволов.Вставить("“" , """");
	МассивЗапрещенныхСимволов.Вставить("_" , "-");
	МассивЗапрещенныхСимволов.Вставить("+" , " ");
	МассивЗапрещенныхСимволов.Вставить("*" , ".");
	МассивЗапрещенныхСимволов.Вставить("~" , ".");
	МассивЗапрещенныхСимволов.Вставить("`" , ".");
	МассивЗапрещенныхСимволов.Вставить("<" , "(");
	МассивЗапрещенныхСимволов.Вставить(">" , ")");
	МассивЗапрещенныхСимволов.Вставить("#" , ".");
	МассивЗапрещенныхСимволов.Вставить("=" , "-");
	МассивЗапрещенныхСимволов.Вставить("{" , "(");
	МассивЗапрещенныхСимволов.Вставить("}" , ")");
	МассивЗапрещенныхСимволов.Вставить("&" , "8");
	МассивЗапрещенныхСимволов.Вставить("°" , "o");
	МассивЗапрещенныхСимволов.Вставить("[" , "(");
	МассивЗапрещенныхСимволов.Вставить("]" , ")");
	МассивЗапрещенныхСимволов.Вставить("`" , """");
	
	Для Каждого ЗапрещенныйСимвол Из МассивЗапрещенныхСимволов Цикл
		Текст = СтрЗаменить(Текст, ЗапрещенныйСимвол.Ключ, ЗапрещенныйСимвол.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиЛишниеДанные(Текст)
	
	МассивЛишних = Новый Массив;
	МассивЛишних.Добавить(".net");
	МассивЛишних.Добавить(".org");
	МассивЛишних.Добавить(".ru");
	МассивЛишних.Добавить(".com");
	МассивЛишних.Добавить(".su");
	МассивЛишних.Добавить(".info");
	МассивЛишних.Добавить(".biz");
	МассивЛишних.Добавить(".club");
	МассивЛишних.Добавить(".by");
	МассивЛишних.Добавить(".ua");
	МассивЛишних.Добавить(".kz");
	МассивЛишних.Добавить("www");
	МассивЛишних.Добавить("http");
	
	Для Каждого ЛишниеДанные Из МассивЛишних Цикл
		Если СтрНайти(Текст, ЛишниеДанные) > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Найдено: " + ЛишниеДанные;
			Сообщение.Поле = "Объект.Текст";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти