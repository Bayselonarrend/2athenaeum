#Область ОбработчикиСобытий

Функция tgbotlogIn(Запрос)	
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Попытка
		
	СтруктураПараметров		= Новый Структура;
	Ответ 					= Новый HTTPСервисОтвет(200);
	ТелоДД 					= Запрос.ПолучитьТелоКакДвоичныеДанные();
	ТелоСтрока				= Запрос.ПолучитьТелоКакСтроку();
		                                                       
	ОтветОбъект = МетодыРаботыHttp.JsonВСтруктуру(ТелоДД);
	
	СтруктураПараметров.Вставить("Секрет"		, "");
	СтруктураПараметров.Вставить("ВидСоцСети"	, Перечисления.СоцСети.Telegram);
	
	Если ОтветОбъект.Свойство("message") Тогда
		
		ПолучитьСтруктуруПараметровИзСообщения(ОтветОбъект, СтруктураПараметров);
				
	ИначеЕсли ОтветОбъект.Свойство("callback_query") Тогда
		
		ПолучитьСтруктуруПараметровИзКлавиатуры(ОтветОбъект, СтруктураПараметров);
		
	ИначеЕсли  ОтветОбъект.Свойство("my_chat_member") Тогда
		
		ПолучитьСтруктуруПараметровИзСтатуса(ОтветОбъект, СтруктураПараметров);
		Возврат Ответ;	
									
	Иначе
		
		 ИнструментарийВызовСервера.ЗаписьВЖурналИсключений("Не message и не my_chat_memebr в запросе от Telegram"
		 	, ТелоСтрока);
		 Возврат Ответ;
		
	КонецЕсли;
									
	МетодыБота.ОбработатьВходящееСообщение(СтруктураПараметров);
		
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки(), ТелоСтрока);
	КонецПопытки;
	              
	Возврат Ответ;
	
КонецФункции

Функция tgbotgetLog(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции

Функция vklogintakeData(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(307);
	Ответ.Заголовки.Вставить("Location", "https://athenaeum.digital/profile"); 

	Попытка
	Токен 		= Запрос.ПараметрыЗапроса.Получить("code");
	Печенька	= Запрос.ПараметрыЗапроса.Получить("uuid");
	КодКниги	= "";
	
	Если СтрНайти(Печенька, "_") > 0 Тогда
		
		МассивПараметра = СтрРазделить(Печенька, "_", Истина);
		Печенька		= МассивПараметра[0];
		КодКниги		= ?(МассивПараметра.Количество() > 1, МассивПараметра[1], "");
		
	КонецЕсли;
	
	КодВК 		= МетодыБота.АвторизоватьПользователяНаСайте(Токен, Печенька, КодКниги);
	Редирект	= 302;
	
	Если КодВК = Редирект Тогда
		Ответ.Заголовки.Вставить("Location", "https://vk.com/im?sel=-218704372"); 
	КонецЕсли;
		
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции

Функция vkbottakeData(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("ok");
	
	Попытка
		
	СтрокаЗапроса = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON 	= Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаЗапроса);
	ОтветОбъект = ПрочитатьJSON(ЧтениеJSON);
	
	Откуда 	= Строка(ОтветОбъект.object.message.from_id);
	Куда	= Строка(ОтветОбъект.object.message.peer_id);
	
	Если Откуда <> Куда Тогда 
		Возврат Ответ;
	КонецЕсли;
	
	ИдентификаторПользователя 	= Строка(ОтветОбъект.object.message.from_id);
	ИдентификаторЧата			= ОтветОбъект.object.message.conversation_message_id;
	ТекстСообщения 				= СокрЛП(ОтветОбъект.object.message.text);
	Секрет 						= ОтветОбъект.secret;
	ИмяПользователя				= "Новый";
	
	СтруктураПараметров			= Новый Структура;
	СтруктураПараметров.Вставить("ИдентификаторПользователя"	, ИдентификаторПользователя);
	СтруктураПараметров.Вставить("ИдентификаторЧата"			, ИдентификаторЧата);
	СтруктураПараметров.Вставить("ТекстСообщения"				, ТекстСообщения);
	СтруктураПараметров.Вставить("ВидСоцСети"					, Перечисления.СоцСети.VK);
	СтруктураПараметров.Вставить("ИмяПользователя"				, ИмяПользователя);
	СтруктураПараметров.Вставить("Секрет"						, Секрет);
	СтруктураПараметров.Вставить("Никнейм"						, "");
	
	МетодыБота.ОбработатьВходящееСообщение(СтруктураПараметров);
	
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки(), СтрокаЗапроса);
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

Функция vkbotcallBack(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции

Функция takeStartsendData(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Попытка
		
	Печенька 			= Запрос.ПараметрыЗапроса.Получить("cookie");
	Количество 			= Запрос.ПараметрыЗапроса.Получить("book");
	Назначение			= Запрос.ПараметрыЗапроса.Получить("social");
	ПользовательИБ		= МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	
	ПоляПользователя 	= ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(ПользовательИБ
		, "Telegram,VK,РазрешилПисатьVK");
	
	ЗапретТГ = (Назначение = "tg" И Не ЗначениеЗаполнено(ПоляПользователя.Telegram));
	ЗапретВК = (Назначение = "vk" И (Не ЗначениеЗаполнено(ПоляПользователя.VK) Или Не ПоляПользователя.РазрешилПисатьVK));
	
	Если ЗапретТГ ИЛИ ЗапретВК Тогда		
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
	КонецЕсли;
	
	СтруктураПараметров			= Новый Структура;
	СтруктураПараметров.Вставить("ИмяПользователя"				, "Новый");
	СтруктураПараметров.Вставить("ТекстСообщения"				, Количество);
	СтруктураПараметров.Вставить("Никнейм"						, "");
	СтруктураПараметров.Вставить("Секрет"						, 
		ИнструментарийВызовСервера.ЗначениеРеквизитаОбъекта(Справочники.Сообщества.Athenaeum, "ВК_communitysecret"));
	
	Если Назначение = "tg" Тогда
		
		СтруктураПараметров.Вставить("ИдентификаторПользователя", МетодыРаботыHttp.ЧислоВСтроку(ПоляПользователя.Telegram));
		СтруктураПараметров.Вставить("ИдентификаторЧата"		, МетодыРаботыHttp.ЧислоВСтроку(ПоляПользователя.Telegram));	
		СтруктураПараметров.Вставить("ВидСоцСети"				, Перечисления.СоцСети.Telegram);
		
	ИначеЕсли Назначение = "vk" Тогда
		
		СтруктураПараметров.Вставить("ИдентификаторПользователя"	, МетодыРаботыHttp.ЧислоВСтроку(ПоляПользователя.VK));
		СтруктураПараметров.Вставить("ИдентификаторЧата"			, МетодыРаботыHttp.ЧислоВСтроку(ПоляПользователя.VK));	
		СтруктураПараметров.Вставить("ВидСоцСети"					, Перечисления.СоцСети.VK);
		
	Иначе
		
		ИнструментарийВызовСервера.ЗаписьВЖурналИсключений("SendBook без Social"
			, МетодыРаботыHttp.JSONСтрокой(Запрос.ПараметрыЗапроса));
			
		Ответ = Новый HTTPСервисОтвет(400);
		Возврат Ответ;
		
	КонецЕсли;

	МетодыБота.ОбработатьВходящееСообщение(СтруктураПараметров);
	
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

Функция takeStartcallBack(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция tgbotcallBack(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция vklogincallBack(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция vkbotcors(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСтруктуруПараметровИзСообщения(Знач ОтветОбъект, СтруктураПараметров)

	Никнейм	= ?(ОтветОбъект.message.from.Свойство("username"), ОтветОбъект.message.from.username, "");

	ИдентификаторПользователя 	= ОтветОбъект.message.from.id;
	ИдентификаторЧата 			= ОтветОбъект.message.chat.id;
	ТекстСообщения				= ОтветОбъект.message.text;
	ИмяПользователя				= ?(ОтветОбъект.message.from.Свойство("first_name"),
		ОтветОбъект.message.from.first_name + " ", "") + ?(ОтветОбъект.message.from.Свойство("last_name"),
		ОтветОбъект.message.from.last_name, "");

	СтруктураПараметров.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	СтруктураПараметров.Вставить("ИдентификаторЧата", ИдентификаторЧата);
	СтруктураПараметров.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураПараметров.Вставить("ИмяПользователя", ИмяПользователя);
	СтруктураПараметров.Вставить("Никнейм", Никнейм);

КонецПроцедуры

Процедура ПолучитьСтруктуруПараметровИзСтатуса(Знач ОтветОбъект, СтруктураПараметров)

	FromID				= МетодыРаботыHttp.ЧислоВСтроку(ОтветОбъект.my_chat_member.from.id);
	НовыйСтатус 		= ОтветОбъект.my_chat_member.new_chat_member.status;
	ПользовательИБ		= Справочники.Пользователи.НайтиПоРеквизиту("Telegram", FromID);

	ОбъектПользователь  = ПользовательИБ.ПолучитьОбъект();

	Если НовыйСтатус = "kicked" Тогда
		ОбъектПользователь.ТГ_БотОстановлен = Истина;
	Иначе
		ОбъектПользователь.ТГ_БотОстановлен = Ложь;
	КонецЕсли;

	ОбъектПользователь.Записать();

КонецПроцедуры

Процедура ПолучитьСтруктуруПараметровИзКлавиатуры(Знач ОтветОбъект, СтруктураПараметров)

	Никнейм	= ?(ОтветОбъект.callback_query.from.Свойство("username"), ОтветОбъект.callback_query.from.username, "");

	ИдентификаторПользователя 	= ОтветОбъект.callback_query.from.id;
	ИдентификаторЧата 			= ОтветОбъект.callback_query.message.chat.id;
	ТекстСообщения				= ОтветОбъект.callback_query.data;
	ИмяПользователя				= ?(ОтветОбъект.callback_query.from.Свойство("first_name"),
		ОтветОбъект.callback_query.from.first_name + " ", "") + ?(ОтветОбъект.callback_query.from.Свойство("last_name"),
		ОтветОбъект.callback_query.from.last_name, "");

	СтруктураПараметров.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	СтруктураПараметров.Вставить("ИдентификаторЧата", ИдентификаторЧата);
	СтруктураПараметров.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураПараметров.Вставить("ИмяПользователя", ИмяПользователя);
	СтруктураПараметров.Вставить("Никнейм", Никнейм);
	
КонецПроцедуры
#КонецОбласти