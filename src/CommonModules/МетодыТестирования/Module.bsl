#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьТест(Запрос, Метод) Экспорт
    
    Попытка
        
        Если Не Константы.ЗаписыватьТесты.Получить() Тогда
            Возврат;
        КонецЕсли;
        
        UID = Строка(Новый УникальныйИдентификатор);
        
        НовыйТест = Справочники.АвтотестыСервисов.СоздатьЭлемент();
        НовыйТест.Код                    = UID;
        НовыйТест.Наименование           = "Тест " + UID;
        НовыйТест.ВходнойJSON            = Запрос.ПолучитьТелоКакСтроку();
        НовыйТест.ХранилищеЗаголовков    = Новый ХранилищеЗначения(Запрос.Заголовки);
        НовыйТест.ХранилищеПараметров    = Новый ХранилищеЗначения(Запрос.ПараметрыЗапроса);
        НовыйТест.Метод                  = Метод;
        НовыйТест.URL                    = Запрос.БазовыйURL + Запрос.ОтносительныйURL;
        НовыйТест.Записать();
        
    Исключение
        ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
    КонецПопытки;
    
КонецПроцедуры

Процедура ЗапускТеста(Тест, UIDГруппы = "") Экспорт
    
    РеквизитыТеста     = ИнструментарийВызовСервера.ЗначенияРеквизитовОбъекта(Тест, "ВходнойJSON,Метод,URL,Определитель");
    JSONЗапроса        = РеквизитыТеста.ВходнойJSON;
    URL                = РеквизитыТеста.URL;
    UID                = Строка(Новый УникальныйИдентификатор);
    Определитель       = РеквизитыТеста.Определитель;
    ДопПараметры       = Новый Соответствие;
    Ошибка             = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    АвтотестыСервисовЗаменяемыеПараметры.Параметр КАК Параметр,
        |    АвтотестыСервисовЗаменяемыеПараметры.Значение КАК Значение
        |ИЗ
        |    Справочник.АвтотестыСервисов.ЗаменяемыеПараметры КАК АвтотестыСервисовЗаменяемыеПараметры
        |ГДЕ
        |    АвтотестыСервисовЗаменяемыеПараметры.Ссылка = &Тест";
    
    Запрос.УстановитьПараметр("Тест", Тест);
    
    РезультатЗапроса         = Запрос.Выполнить();    
    ВыборкаДетальныеЗаписи   = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        JSONЗапроса = СтрЗаменить(JSONЗапроса, "@" + ВыборкаДетальныеЗаписи.Параметр, ВыборкаДетальныеЗаписи.Значение);  
    КонецЦикла;
    
    Попытка
                
        Заголовки            = Тест.ХранилищеЗаголовков.Получить();    
        ПараметрыЗапроса     = Новый Соответствие(Тест.ХранилищеПараметров.Получить());    
		ВыполнитьПредобработку(Определитель, JSONЗапроса, ПараметрыЗапроса, ДопПараметры);
        
        Ответ     = МетодыРаботыHttp.ЗапросПоПараметрамСервиса(Заголовки, ПараметрыЗапроса, URL, JSONЗапроса);
        Пройден   = ВыполнитьПостОбработку(Определитель, Ответ, ДопПараметры);
        
    Исключение
        
        Пройден = Ложь;
        Ошибка  = ОписаниеОшибки();
        
    КонецПопытки;
    
    МЗ = РегистрыСведений.ВыполнениеТестов.СоздатьМенеджерЗаписи();
    МЗ.Период        = ТекущаяДатаСеанса();
    МЗ.UID           = UID;
    МЗ.UIDГруппы     = UIDГруппы;
    МЗ.Тест          = Тест;
    МЗ.Пройден       = Пройден;
    МЗ.Ошибка        = Ошибка;
    МЗ.Записать(Истина);
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОсновныеМетоды

Процедура ВыполнитьПредобработку(Знач Определитель, ТелоЗапроса, ПараметрыЗапроса, ДопПараметры)
    
    ОТ = Справочники.ОпределителиТестов;
    
    Если Определитель = ОТ.РегистрацияТелеграм  Тогда        
        РегистрацияТелеграм_Пред(ТелоЗапроса, ДопПараметры);
        
    ИначеЕсли Определитель = ОТ.ВходТелеграм Тогда
        ВходТелеграм_Пред(ТелоЗапроса, ДопПараметры);
		
    ИначеЕсли Определитель = ОТ.РегистрацияВК Тогда
        РегистрацияВК_Пред(ПараметрыЗапроса, ДопПараметры);
   
    Иначе
        Возврат;
    КонецЕсли;
        
КонецПроцедуры

Функция ВыполнитьПостобработку(Знач Определитель, Ответ, ДопПараметры)
    
    ОТ      = Справочники.ОпределителиТестов;
    Пройден = Ложь;
    
    Если Определитель = ОТ.РегистрацияТелеграм  Тогда
        Пройден = РегистрацияТелеграм_Пост(Ответ, ДопПараметры);
        
    ИначеЕсли Определитель = ОТ.ВходТелеграм  Тогда
        Пройден = ВходТелеграм_Пост(Ответ, ДопПараметры);
		
    ИначеЕсли Определитель = ОТ.РегистрацияВК  Тогда
        Пройден = РегистрацияВК_Пост(Ответ, ДопПараметры);
  
    Иначе
        Пройден = Истина;
    КонецЕсли;
    
    Возврат Пройден;
    
КонецФункции

#КонецОбласти

#Область МетодыПредобработки

Процедура РегистрацияТелеграм_Пред(ТелоЗапроса, ДопПараметры)
    
    Актор = Справочники.Пользователи.ЭтотПользователь;
    
    ПользовательТестирования = Актор.ПолучитьОбъект();
    
    ДопПараметры.Вставить("Telegram", ПользовательТестирования.Telegram);
    
    ПользовательТестирования.Telegram = "";
    ПользовательТестирования.Записать();
	
	ТелоДвоичное    = ПолучитьДвоичныеДанныеИзСтроки(ТелоЗапроса, "UTF-8");
    СтруктураТела   = МетодыРаботыHttp.JsonВСтруктуру(ТелоДвоичное, "UTF-8");
    
    Печенька = СтруктураТела["message"]["text"];
    Печенька = СтрЗаменить(Печенька, "/start ", "");
    
    ДопПараметры.Вставить("Печенька", Печенька);
    
КонецПроцедуры

Процедура ВходТелеграм_Пред(ТелоЗапроса, ДопПараметры)

    ТелоДвоичное    = ПолучитьДвоичныеДанныеИзСтроки(ТелоЗапроса, "UTF-8");
    СтруктураТела   = МетодыРаботыHttp.JsonВСтруктуру(ТелоДвоичное, "UTF-8");
    
    Печенька = СтруктураТела["message"]["text"];
    Печенька = СтрЗаменить(Печенька, "/start ", "");
    
    ДопПараметры.Вставить("Печенька", Печенька);
    
КонецПроцедуры

Процедура РегистрацияВК_Пред(ПараметрыЗапроса, ДопПараметры)
	
    Актор = Справочники.Пользователи.ЭтотПользователь;
    
    ПользовательТестирования = Актор.ПолучитьОбъект();
	
	ПараметрыЗапроса.Вставить("code", ПользовательТестирования.VK); 
    ДопПараметры.Вставить("VK", ПользовательТестирования.VK);
    
    ПользовательТестирования.VK = "";
    ПользовательТестирования.Записать();

	Печенька = ПараметрыЗапроса["uuid"];
	ДопПараметры.Вставить("Печенька", Печенька);

КонецПроцедуры

#КонецОбласти

#Область МетодыПостобработки

Функция РегистрацияТелеграм_Пост(Ответ, ДопПараметры)
    
    Пройден     = Ложь;     
    Телеграм    = ДопПараметры.Получить("Telegram");
	Печенька    = ДопПараметры.Получить("Печенька"); 
    
    Если Не ЗначениеЗаполнено(Телеграм) Тогда
        Возврат Ложь;
	КонецЕсли;
	
	ПользовательИБ = МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	
    Если ЗначениеЗаполнено(ПользовательИБ) Тогда
        
        МЗ = РегистрыСведений.АктивныеСеансы.СоздатьМенеджерЗаписи();
        МЗ.Cookie       = Печенька;
        МЗ.Пользователь = ПользовательИБ;
        МЗ.Удалить();
        
        Пройден = Истина;
        
    Иначе
        
        ВызватьИсключение "Сеанс не создан. Cookie = '" + Печенька + "'";
        
    КонецЕсли;
    
    ПользовательПоТелеграм     = Справочники.Пользователи.НайтиПоРеквизиту("Telegram", Телеграм);  
    
    Если ЗначениеЗаполнено(ПользовательПоТелеграм) Тогда
        
        ПользовательПоТелеграм.ПолучитьОбъект().Удалить();
        
        ПользовательТестирования = Справочники.Пользователи.ЭтотПользователь.ПолучитьОбъект();
        ПользовательТестирования.Telegram = Телеграм;
        ПользовательТестирования.Записать();
        Пройден = Истина;
        
    Иначе 
        
        ВызватьИсключение "Пользователь не зарегистрирован. Telegram ID = '" + Телеграм + "'";
        
    КонецЕсли;
    
    Возврат Пройден;

КонецФункции

Функция ВходТелеграм_Пост(Ответ, ДопПараметры)
    
	Пройден     = Ложь;
    Печенька    = ДопПараметры.Получить("Печенька"); 
	
	ПользовательИБ = МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	
    Если ЗначениеЗаполнено(ПользовательИБ) Тогда
        
        МЗ = РегистрыСведений.АктивныеСеансы.СоздатьМенеджерЗаписи();
        МЗ.Cookie       = Печенька;
        МЗ.Пользователь = ПользовательИБ;
        МЗ.Удалить();
        
        Пройден = Истина;
        
    Иначе
        
        ВызватьИсключение "Сеанс не создан. Cookie = '" + Печенька + "'";
        
    КонецЕсли;
    
    Возврат Пройден;
  
КонецФункции

Функция РегистрацияВК_Пост(Ответ, ДопПараметры)
	
	Пройден     = Ложь;
    Печенька    = ДопПараметры.Получить("Печенька"); 
	VK			= ДопПараметры.Получить("VK");
	
	Если Не ЗначениеЗаполнено(VK) Тогда
		ВызватьИсключение "ВК не заполнено";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Печенька) Тогда
		ВызватьИсключение "Печенька не передана";
	КонецЕсли;
	
	ПользовательИБ 	  = МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	ПользовательПоВК  = Справочники.Пользователи.НайтиПоРеквизиту("VK", VK); 
	
	Если Не ПользовательИБ = ПользовательПоВК Тогда
		ВызватьИсключение "Пользователь по ВК не равен пользователю сеанса:"
			+ Символы.ПС
			+ "ВК: "
			+ Строка(ПользовательПоВК)
			+ Символы.ПС
			+ "Сеанс: "
			+ Строка(ПользовательИБ);
	КонецЕсли;
	
    Если ЗначениеЗаполнено(ПользовательИБ) Тогда
		
		ПользовательТестирования    = Справочники.Пользователи.ЭтотПользователь.ПолучитьОбъект();
		ПользовательТестирования.VK = VK;
		ПользовательТестирования.Записать();
		
		ПользовательОбъект = ПользовательИБ.ПолучитьОбъект();
		ПользовательОбъект.Удалить();
        Пройден = Истина;
        
    Иначе
        
        ВызватьИсключение "Сеанс или пользователь не создан. Cookie = '" + Печенька + "'";
        
    КонецЕсли;
    
    Возврат Пройден;

КонецФункции

#КонецОбласти

#КонецОбласти