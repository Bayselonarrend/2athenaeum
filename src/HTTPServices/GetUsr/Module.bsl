#Область ОбработчикиСобытий
Функция takeDatagetData(Запрос)
	
	Ответ 						= Новый HTTPСервисОтвет(200);
	
	Попытка
		
	Печенька 					= Запрос.ПараметрыЗапроса.Получить("cookie");    //Строка
	Действие 					= Запрос.ПараметрыЗапроса.Получить("action");    //Строка
	
	Если Печенька = Неопределено Тогда		
		Возврат Новый HTTPСервисОтвет(400);
	КонецЕсли;
	
	Если Действие = "logout" Тогда
		
		ПользовательВыхода = МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
		
		МЗ 				= РегистрыСведений.АктивныеСеансы.СоздатьМенеджерЗаписи();
		МЗ.Cookie		= Печенька;
		МЗ.Пользователь = ПользовательВыхода;	
		МЗ.Удалить();
		
		Ответ = Новый HTTPСервисОтвет(400);
		
	Иначе
		
		СтруктураПользователя 	= МетодыApiСайта.ВернутьДанныеПользователя(Печенька);
		
		Если ЗначениеЗаполнено(СтруктураПользователя) Тогда
			ЗапросJSON 				= МетодыРаботыHttp.JSONСтрокой(СтруктураПользователя);
			Ответ.УстановитьТелоИзСтроки(ЗапросJSON);
		Иначе
			Ответ = Новый HTTPСервисОтвет(400);
		КонецЕсли;
				
	КонецЕсли;
	
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

Функция cookieAvailablegetAnswer(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Попытка
	
	Печенька 		= Запрос.ПараметрыЗапроса.Получить("cookie");
	ПользовательИБ  = МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	
	Если ЗначениеЗаполнено(ПользовательИБ) Тогда
		Ответ = Новый HTTPСервисОтвет(400);
	КонецЕсли;
	
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

Функция getBooksListgetData(Запрос)
	
	Ответ 			= Новый HTTPСервисОтвет(200);
	
	Попытка
		
	Печенька 		= Запрос.ПараметрыЗапроса.Получить("cookie");
	Количество 		= Запрос.ПараметрыЗапроса.Получить("count");
	ПользовательИБ	= МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	
	МассивКниг		= МетодыApiСайта.ВернутьСписокЧтения(ПользовательИБ, Количество);
	
	JSONОтвет = МетодыРаботыHttp.JSONСтрокой(МассивКниг);
	Ответ.УстановитьТелоИзСтроки(JSONОтвет);
	
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;

	Возврат Ответ;
		
КонецФункции

Функция getBookStatsendData(Запрос)
	
	Ответ 			= Новый HTTPСервисОтвет(200);
	amount			= "amount";
	total			= "total";
	
	Попытка
		
	Печенька 		= Запрос.ПараметрыЗапроса.Получить("cookie");
	НомерКниги		= Запрос.ПараметрыЗапроса.Получить("book");	
	КнигаПоКоду		= Справочники.Произведения.НайтиПоКоду(НомерКниги);
	
	ПользовательИБ 	= МетодыApiСайта.ВернутьПользователяПоCookie(Печенька);
	ДанныеПоКниге	= МетодыApiСайта.ВернутьСписокЧтения(ПользовательИБ, , КнигаПоКоду);
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("autorized", ?(ЗначениеЗаполнено(ПользовательИБ), Истина, Ложь));
	
	Если Не ДанныеПоКниге.Количество() = 0 Тогда	
		СтруктураОтвета.Вставить(amount	, ДанныеПоКниге[amount]);
		СтруктураОтвета.Вставить(total	, ДанныеПоКниге[total]);
	Иначе
		СтруктураОтвета.Вставить(amount	, "0");	
		СтруктураОтвета.Вставить(total	, КнигаПоКоду.Слов);
	КонецЕсли; 
	 
	 ОтветJson = МетодыРаботыHttp.JSONСтрокой(СтруктураОтвета);
	 Ответ.УстановитьТелоИзСтроки(ОтветJson);
	 
	Исключение
	ИнструментарийВызовСервера.ЗаписьВЖурналИсключений(ОписаниеОшибки());
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

Функция takeDataoption(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция cookieAvailablecors(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция getBooksListcors(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция getBookStatcors(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

#КонецОбласти
